[{"categories":["Kubernetes"],"content":"Version Choise .ref https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/ \n kubeadm version: \u0026amp;version.Info{Major:\u0026ldquo;1\u0026rdquo;, Minor:\u0026ldquo;26\u0026rdquo;, GitVersion:\u0026ldquo;v1.26.1\u0026rdquo;, GitCommit:\u0026ldquo;8f94681cd294aa8cfd3407b8191f6c70214973a4\u0026rdquo;, GitTreeState:\u0026ldquo;clean\u0026rdquo;, BuildDate:\u0026ldquo;2023-01-18T15:56:50Z\u0026rdquo;, GoVersion:\u0026ldquo;go1.19.5\u0026rdquo;, Compiler:\u0026ldquo;gc\u0026rdquo;, Platform:\u0026ldquo;linux/amd64\u0026rdquo;} docker Version: 20.10.12 containerd: 1.6.18  Prepare 1# check swap off with free -m .ref https://kubernetes.io/zh-cn/docs/setup/production-environment/tools/kubeadm/install-kubeadm/ 2swapoff -a 3 4 5# check port is available 6nc 127.0.0.1 6443 7 8# some host dependences 9apt install socat conntrack 10 11# Kubernetes package repositories  12sudo apt-get update 13sudo apt-get install -y apt-transport-https ca-certificates curl 14 15curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg 16echo \u0026#39;deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /\u0026#39; | sudo tee /etc/apt/sources.list.d/kubernetes.list 17 18sudo apt-get update 19sudo apt-get install -y kubelet kubeadm kubectl 20sudo apt-mark hold kubelet kubeadm kubectl 21 22# In China, user can use sources of aliyun 23curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - 24cat \u0026lt;\u0026lt;EOF \u0026gt;/etc/apt/sources.list.d/kubernetes.list 25deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main 26EOF 27apt-get update 28apt-get install -y kubelet kubeadm kubectl 29 30# Install crictl 31VERSION=\u0026#34;v1.26.0\u0026#34; 32wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz 33sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin 34rm -f crictl-$VERSION-linux-amd64.tar.gz 35 36# Prepare config file for kubelet 37RELEASE_VERSION=\u0026#34;v0.4.0\u0026#34; 38curl -sSL \u0026#34;https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service\u0026#34; | sed \u0026#34;s:/usr/bin:${DOWNLOAD_DIR}:g\u0026#34; | sudo tee /etc/systemd/system/kubelet.service 39sudo mkdir -p /etc/systemd/system/kubelet.service.d 40curl -sSL \u0026#34;https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf\u0026#34; | sed \u0026#34;s:/usr/bin:${DOWNLOAD_DIR}:g\u0026#34; | sudo tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf Install 1kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers --service-cidr=10.96.0.0/16 --pod-network-cidr=10.244.0.0/16 --v=5 2 3# if Your Kubernetes control-plane has initialized successfully! 4kubectl get node 5NAME STATUS ROLES AGE VERSION 6bvc-smt-004 Ready control-plane 30m v1.26.1 7 8crictl ps|grep kube or docker ps|grep kub 9 10# The join node token needs to be regenerated after it expires in 24h. 11# openssl x509 -in /etc/kubernetes/pki/ca.crt -noout -pubkey | openssl rsa -pubin -outform DER 2\u0026gt;/dev/null | sha256sum | cut -d\u0026#39; \u0026#39; -f1 12kubeadm token create --print-join-command 13kubeadm join 10.23.34.45:6443 --token xxx --discovery-token-ca-cert-hash shar:123 14 15# Test pod 16cat hello.yaml 17apiVersion: v1 18kind: Pod 19metadata: 20 name: hello-pod 21 labels: 22 app.kubernetes.io/name: MyApp 23spec: 24 containers: 25 - name: hello-pod 26 image: busybox:1.28 27 command: [\u0026#39;sh\u0026#39;, \u0026#39;-c\u0026#39;, \u0026#39;echo The app is running! \u0026amp;\u0026amp; sleep 20\u0026#39;] 28 29kubectl apply -f hello.yaml 30 31# Install CNI 32calico https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart 33 Troubleshooting \u0026amp; Resolution there are many init fail when check kubelet status systemctl status kubelet\njournalctl -xu kubelet\ncrictl ps check contained if is ready\nif the error log is about endpoint, try modify /etc/systemd/system/kubelet.service.d/10-kubeadm.conf（you can find template in k8s official website）\nExecStart=/usr/bin/kubelet \u0026ndash;container-runtime-endpoint=unix:///run/containerd/containerd.sock $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS\nAnd in no-control-plane nodes, kubeadm reset -f before kubeadm join if you have executed kubeadm init\ncontainerd 状态失败 runtime connect using default endpoint\ncrictl config runtime-endpoint unix:///run/containerd/containerd.sock\nor update containerd\napt rm containerd ## apt install containerd \u0026amp;\u0026amp; rm /etc/containerd/config.toml \u0026amp;\u0026amp; containerd config default \u0026gt; /etc/containerd/config.toml \u0026amp;\u0026amp; systemctl restart containerd 关闭交换区 swapoff -a\nupdate recv-key apt-key adv \u0026ndash;keyserver keyserver.ubuntu.com \u0026ndash;recv-keys 40976EAF437D05B5\ninstall kubeadm，kubelet，kubectl offline RELEASE=v1.26.1 ARCH=\u0026ldquo;amd64\u0026rdquo; curl -L \u0026ndash;remote-name-all https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/${ARCH}/{kubeadm,kubelet,kubectl} mv kube* /usr/local/bin \u0026amp;\u0026amp; chmod +x /usr/local/bin/kube*\nHTTP call equal to \u0026lsquo;curl -sSL http://localhost:10248/healthz\u0026rsquo; failed with error: added docker config file \u0026lsquo;/etc/docker/daemon.json\u0026rsquo; and added below to the file. { \u0026ldquo;exec-opts\u0026rdquo;: [\u0026ldquo;native.cgroupdriver=systemd\u0026rdquo;] }\n镜像仓库没有偷传到下面 resolve image pull fail with agent, kubeadm config images pull --image-repository registry.aliyuncs.com/google_containers ## use containerd need tag crictl images, special pause ## ctr \u0026ndash;namespace=k8s.io image tag registry.aliyuncs.com/google_containers/pause:3.9 registry.k8s.io/pause:3.9\nor edit /etc/containerd/config.toml\nContainerd harbor config config harbor of hub.xxx.co with name: xxx\n1[plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry] 2 3 [plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry.mirrors] 4 5 [plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry.mirrors.\u0026#34;docker.io\u0026#34;] 6 7 endpoint = [\u0026#34;https://registry-1.docker.io\u0026#34;] 8 9 [plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry.mirrors.\u0026#34;hub.xxx.co\u0026#34;] 10 11 endpoint = [\u0026#34;https://hub.xxx.co\u0026#34;] 12 13 [plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry.configs] 14 15 [plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry.configs.\u0026#34;hub.xxx.co\u0026#34;.tls] 16 17 insecure_skip_verify = true 18 19 #ca_file = \u0026#34;/etc/containerd/certs.d/registry.harbor.com/ca.crt\u0026#34; #ca证书 20 21 #cert_file = \u0026#34;/etc/containerd/certs.d/registry.harbor.com/registry.harbor.com.cert\u0026#34; #harbor证书 22 23 #key_file = \u0026#34;/etc/containerd/certs.d/registry.harbor.com/registry.harbor.com.key\u0026#34; #密钥 24 25 [plugins.\u0026#34;io.containerd.grpc.v1.cri\u0026#34;.registry.configs.\u0026#34;hub.xxx.co\u0026#34;.auth] 26 27 username = \u0026#34;xxx\u0026#34; 28 29 password = \u0026#34;xxxxxx\u0026#34; Control-plane can schduler pod kubectl taint node xxx node-role.kubernetes.io/control-plane-\nrollback: kubectl taint node xxx node-role.kubernetes.io/control-plane:NoSchedule\ncouldn\u0026rsquo;t get current server API group list on node cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config\nCheck sock\ntr \\\\0 ' ' \u0026lt; /proc/\u0026quot;$(pgrep kubelet)\u0026quot;/cmdline\nCNI kubeadm reset systemctl stop kubelet rm -rf /var/lib/cni/ rm -rf /var/lib/kubelet/* rm -rf /etc/cni/ ifconfig cni0 down ifconfig flannel.1 down ip link delete cni0 ip link delete flannel.1 systemctl start kubelet\nbin缺少 https://github.com/containernetworking/plugins/releases install calico\nDNS 问题 （条目不能超过3） systemctl status systemd-resolved\ncat /etc/systemd/resolved.conf\ncat /etc/resolved.conf\nplugin type=\u0026ldquo;flannel\u0026rdquo; failed (add): open /run/flannel/subnet.env: no such file or directory try rm -f /etc/cni/net.d/*flannel* \ndashboad baretoken https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md ","date":"Aug 29, 2023","img":"/images/bg/bgh1.jpg","permalink":"/categories/k8s/install/","series":null,"tags":["Kubernetes"],"title":"Install Kubernetes(k8s) With Kubeadm"},{"categories":["Network"],"content":"UDP packets can\u0026rsquo;t be greater than 512 bytes.\nTCP is used for Zone transfer and UDP for name, and queries either regular (primary) or reverse.\nThere should be consistency in DNS Zone database.\n","date":"Jan 6, 2023","img":"/images/bg/bgh1.jpg","permalink":"/categories/network/dns/","series":null,"tags":["DNS"],"title":"DNS Use Both the Protocols TCP and UDP"},{"categories":["Golang"],"content":"test script 1func gen(nums ...int) \u0026lt;-chan int { 2 out := make(chan int) 3 go func() { 4 for _, n := range nums { 5 out \u0026lt;- n 6 } 7 close(out) 8 }() 9 return out 10} 11func sq(in \u0026lt;-chan int) \u0026lt;-chan int { 12 out := make(chan int) 13 go func() { 14 for n := range in { 15 out \u0026lt;- n * n 16 } 17 close(out) 18 }() 19 return out 20} 21 22func merge(cs ...\u0026lt;-chan int) \u0026lt;-chan int { 23 var wg sync.WaitGroup 24 out := make(chan int) 25 26 // Start an output goroutine for each input channel in cs. output 27 // copies values from c to out until c is closed, then calls wg.Done. 28 output := func(c \u0026lt;-chan int) { 29 for n := range c { 30 out \u0026lt;- n 31 } 32 wg.Done() 33 } 34 wg.Add(len(cs)) 35 for _, c := range cs { 36 go output(c) 37 } 38 39 // Start a goroutine to close out once all the output goroutines are 40 // done. This must start after the wg.Add call. 41 go func() { 42 wg.Wait() 43 close(out) 44 }() 45 return out 46} 47 48func TestFan(t *testing.T) { 49 x := []int{0} 50 for i := 1; i \u0026lt; 10000; i++ { 51 x = append(x, i) 52 } 53 st := time.Now().UnixMicro() 54 c := gen(x...) 55 56 out := []\u0026lt;-chan int{} 57 for i := 0; i \u0026lt; 10; i++ { 58 out = append(out, sq(c)) 59 } 60 61 // Consume the output. 62 for n := range merge(out...) { 63 fmt.Println(n) // 4 then 9, or 9 then 4 64 } 65 t1 := time.Now().UnixMicro() - st 66 67 fmt.Println(\u0026#34;=======\u0026#34;) 68 st = time.Now().UnixMicro() 69 var wg sync.WaitGroup 70 wg.Add(len(x)) 71 for _, i := range x { 72 go func(x int) { 73 defer wg.Done() 74 fmt.Println(x * x) 75 }(i) 76 } 77 wg.Wait() 78 t2 := time.Now().UnixMicro() - st 79 80 fmt.Printf(\u0026#34;===%d vs %d\u0026#34;, t1, t2) 81 assert.Assert(t, t1 \u0026lt; t2) 82} 83 84// performace 1:4 85 ","date":"Nov 29, 2021","img":"/images/bg/go.png","permalink":"/categories/golang/fan/","series":null,"tags":null,"title":"Fan vs Go Func"},{"categories":[],"content":"1 curl -O -L https://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz \u0026amp;\u0026amp; tar xvzf sshpass-1.06.tar.gz 2 ./configure 3 make install ","date":"Nov 26, 2021","img":"/images/bg.jpeg","permalink":"/series/linux/fxxk_ssh/","series":["Linux"],"tags":["Shell","Linux","SSH","Python3"],"title":"Fxxk SSH"},{"categories":null,"content":"what is devops DevOps 是一种工作模式，集合文化理念、实践和工具，来使团队的工作合作更高效，交付更便捷可靠。\nwhy need devops 懒\n因为它可以帮我们自动的处理一些苦燥的任务\nbest pracitce CI（持续集成） 开发人员定期将代码的变更合并到一个存储库中，之后系统会自动，或通过条件，触发构建可执行物料的过程。 gitlab gitlab-ci 可执行物料 docker image 或可执行程序以及动态库，并附带提供执行参数文档以及异常处理文档。\n1.构建可执行程序\n2.构建可执行容器\n3.微服务\nCD（持续交付）\n","date":"Nov 25, 2021","img":"/images/bg/computerp.png","permalink":"/categories/workway/cicd/","series":["Manual"],"tags":["Blog","github","dns","domain"],"title":"DevOps!"},{"categories":[],"content":"ffmpeg-develop: vscode + docker + ssh Dockerfile 1FROM vonsago/ffmpeg-devel 2RUN mkdir /var/run/sshd \u0026amp;\u0026amp; apt-get install -y openssh-server --allow-unauthenticated \u0026amp;\u0026amp; echo \u0026#39;root:root\u0026#39; | chpasswd \u0026amp;\u0026amp; sed -i \u0026#39;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/\u0026#39; /etc/ssh/sshd_config \u0026amp;\u0026amp; useradd -ms /bin/bash debugger \u0026amp;\u0026amp; echo \u0026#39;debugger:pwd\u0026#39; | chpasswd 3RUN wget \u0026#34;http://ftp.gnu.org/gnu/gdb/gdb-7.11.tar.gz\u0026#34; \u0026amp;\u0026amp; tar -xvzf gdb-7.11.tar.gz \u0026amp;\u0026amp; cd gdb-7.11 \u0026amp;\u0026amp; ./configure \u0026amp;\u0026amp; make \u0026amp;\u0026amp; make install 4RUN apt-get install -y --allow-unauthenticated clang 5CMD [\u0026#34;/usr/sbin/sshd\u0026#34;, \u0026#34;-D\u0026#34;] 1docker build -f Dockerfil.dev --no-cache -t vonsago/ffmpeg-dev . 2docker run -d --cap-add sys_ptrace -p127.0.0.1:2222:22 vonsago/ffmpeg-dev 3 4FAQ: if nessary, Debug: 51.ps -e|grep ssh 6*the remote ip should not in ~/.ssh/known_hosts* 7/usr/sbin/sshd 8/etc/init.d/ssh restart 92.WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! - vim ~/.ssh/known_hosts , rm 2222 port 10Ssh-keygen -f \u0026#34;/root/.ssh/known_hosts\u0026#34; -R \u0026#34;[127.0.0.1]:2233\u0026#34; 11use vscode: https://code.visualstudio.com/docs/containers/ssh 12 13--- 14 15\u0026gt;\u0026gt;\u0026gt; import requests 16\u0026gt;\u0026gt;\u0026gt; req = requests.Request(\u0026#39;GET\u0026#39;, \u0026#39;https://httpbin.org/get\u0026#39;) 17\u0026gt;\u0026gt;\u0026gt; r = req.prepare() 18\u0026gt;\u0026gt;\u0026gt; r 19\u0026lt;PreparedRequest [GET]\u0026gt; 20 21\u0026gt;\u0026gt;\u0026gt; s = requests.Session() 22\u0026gt;\u0026gt;\u0026gt; s.send(r) 23\u0026lt;Response [200]\u0026gt; 24 25./configure --extra-libs=-lpthread --extra-libs=-lm --enable-gpl --enable-libfdk_aac --enable-libx264 --enable-nonfree --disable-asm 26 ","date":"May 17, 2021","img":"/images/bg/computer2.jpg","permalink":"/series/ffmpeg/ffmpeg-develop/","series":["FFmpeg"],"tags":["FFmpeg","Video","C/C++"],"title":"Video Develop Environment"},{"categories":null,"content":"What is RTMP   ","date":"Jul 14, 2020","img":"/images/bg/bbg.jpg","permalink":"/series/linux/rtmp/","series":["Linux"],"tags":["RTMP"],"title":"RTMP"},{"categories":["Docker"],"content":"Docker Stats 1是基于docker 1.10.3版本的源码， 2对docker stats命令进行源码分析，看看docker stats命令输出的数据是从cgroups fs中怎么怎么计算出来的。 3 4$ docker stats nginx-test |CONTAINER|CPU % |MEM USAGE / LIMIT|MEM %|NET I/O |BLOCK I/O | |---|---|---|---|---|---| | nginx-test|0.00% | 4.268 MB / 1.041 GB | 0.41% | 1.296 kB / 648 B | 7.463 MB / 0 B| 5 6docker client相关代码入口可参考：/docker/docker/api/client/stats.go#141 docker daemon相关代码入口可参考：/docker/docker/daemon/daemon.go#1474 7 8##源码分析结果 ###Cpu数据： docker daemon会记录这次读取/sys/fs/cgroup/cpuacct/docker/[containerId]/cpuacct.usage的值，作为cpu_total_usage；并记录了上一次读取的该值为pre_cpu_total_usage； 9 10读取/proc/stat中cpu field value，并进行累加，得到system_usage;并记录上一次的值为pre_system_usage； 11 12读取/sys/fs/cgroup/cpuacct/docker/[containerId]/cpuacct.usage_percpu中的记录，组成数组per_cpu_usage_array； 13 14docker stats计算Cpu Percent的算法： 15 16 cpu_delta = cpu_total_usage - pre_cpu_total_usage; system_delta = system_usage - pre_system_usage; CPU % = ((cpu_delta / system_delta) * length(per_cpu_usage_array) ) * 100.0 ###Memory数据：\n1读取/sys/fs/cgroup/memory/docker/[containerId]/memory.usage_in_bytes的值，作为mem_usage； 2 3如果容器限制了内存，则读取/sys/fs/cgroup/memory/docker/[id]/memory.limit_in_bytes作为mem_limit，否则mem_limit = machine_mem； 4 5docker stats计算Memory数据的算法： 6 7 MEM USAGE = mem_usage MEM LIMIT = mem_limit MEM % = (mem_usage / mem_limit) * 100.0 8 9 10Networt Stats数据： 11获取属于该容器network namespace veth pairs在主机中对应的veth*虚拟网卡EthInterface数组，然后循环数组中每个网卡设备，读取/sys/class/net/\u0026lt;EthInterface\u0026gt;/statistics/rx_bytes得到rx_bytes, 读取/sys/class/net/\u0026lt;EthInterface\u0026gt;/statistics/tx_bytes得到对应的tx_bytes。 12 13将所有这些虚拟网卡对应的rx_bytes累加得到该容器的rx_bytes。 14 15将所有这些虚拟网卡对应的tx_bytes累加得到该容器的tx_bytes。 16 17docker stats计算Network IO数据的算法： 18 19 NET I = rx_bytes NET O = tx_bytes 20 ###Blkio Stats数据： 获取每个块设备的IoServiceBytesRecursive数据：先去读取/sys/fs/cgroup/blkio/docker/[containerId]/blkio.io_serviced_recursive中是否有有效值，\n1如果有，则读取/sys/fs/cgroup/blkio/docker/[containerId]/blkio.io_service_bytes_recursive的值返回； 2如果没有，就去读取/sys/fs/cgroup/blkio/docker/[containerId]/blkio.throttle.io_service_bytes中的值返回； 3将每个块设备的IoServiceBytesRecursive数据中所有read field对应value进行累加，得到该容器的blk_read值； 将每个块设备的IoServiceBytesRecursive数据中所有write field对应value进行累加，得到该容器的blk_write值； 4 5docker stats计算Block IO数据的算法： 6 7 BLOCK I = blk_read BLOCK O = blk_write ","date":"Feb 20, 2020","img":"/images/bg/bg2.jpeg","permalink":"/categories/docker/docker-stats/","series":null,"tags":["Linux","Docker"],"title":"Docker Stats"},{"categories":[],"content":"Session\n   Session can store any type of data because the value is of data type of “object”    These are stored at server side.    Sessions are secured because it is stored in binary format/encrypted form and gets decrypted at server.    Session is independent for every client i.e. individual for every client.    There is no limitation on the size or number of sessions to be used in an application.    We cannot disable the sessions. Sessions can be used without cookies also.    The disadvantage of session is that it is a burden or an overhead on server.    Sessions are called as Non-Persistent cookies because its life time can be set manually    Cookies\n   Cookies can store only “string” datatype.    They are stored at client side.    Cookie is non-secure since stored in text-format at client side.    Cookies may or may not be individual for every client.    Size of cookie is limited to 40 and number of cookies to be used is restricted to 20.    Cookies can be disabled.    Since the value is in string format there is no security.   8.We have persistent and non-persistent cookies.  ","date":"Feb 10, 2020","img":"/images/bg/bgh2.jpg","permalink":"/series/linux/session-cookie-diff/","series":["Linux"],"tags":["Web","Linux"],"title":"The Different Between Session With Cookie"},{"categories":[],"content":"top 参数详解 ","date":"Jan 20, 2020","img":"/images/bg/bgh3.jpg","permalink":"/series/linux/top/","series":["Linux"],"tags":["Linux"],"title":"Man Top"},{"categories":null,"content":"FFmpeg calls python Depends  ffmpeg needs to dynamically compile (or python programs need to be statically compiled, it\u0026rsquo;s difficult) python program needs to call cpython interface   Example docker images python programs debug ","date":"Jan 14, 2020","img":"/images/bg/ang.jpeg","permalink":"/series/python/real-python/","series":["Python"],"tags":["Python3"],"title":"CPython"},{"categories":["Kubernetes"],"content":"","date":"Jan 3, 2020","img":"/images/bg/bgh1.jpg","permalink":"/categories/k8s/kubernetes-learn/","series":null,"tags":["Kubernetes"],"title":"Kube"},{"categories":[],"content":"1from PIL import Image 2import sys 3def gipit(pname): 4 with Image.open(pname) as im: 5 im.save(pname+\u0026#39;.jpeg\u0026#39;, \u0026#39;jpeg\u0026#39;, progressive=True, optimize=True) 6if __name__ == \u0026#39;__main__\u0026#39;: 7 _, pname = sys.argv 8 gipit(pname) ","date":"Dec 18, 2019","img":"/images/bg/computer2.jpg","permalink":"/series/python/zip-picture/","series":["Python"],"tags":["Python3","Picture"],"title":"Zip Picture With Python"},{"categories":[],"content":"Flask logging 使用 Flask 时，如何优雅的输出日志。这些日志也许需要特定的格式，更丰富的信息，或者添加一些上下文的信息（如当前登录的用户名）等等。\n根据官方文档来看，当想要为项目配置日志时，应当在程序启动时尽早进行配置。比如在flask_app = Flask('api-controller')之前配置。 如果不配置，flask 会create_logger\n1# flask source code 中是这样的 2default_handler = logging.StreamHandler(wsgi_errors_stream) 3default_handler.setFormatter( 4 logging.Formatter(\u0026#34;[%(asctime)s] %(levelname)s in %(module)s: %(message)s\u0026#34;) 5) 6# 所以使用缺省配置时 7 如果在操作 app.logger 之后配置日志，并且需要 移除缺省的日志记录器，可以导入并移除它:\n1from flask.logging import default_handler 2 3flask_app.logger.removeHandler(default_handler) 实际上，在设置完 basicConfig 后也可以通过下面方式修改。这段代码的影响是**在所有日志后面增加一个上下文参数（当前登录的用户名）\n1from flask import g 2username = g.user.name 3root = logging.getLogger() 4handler = logging.StreamHandler() 5formatter = logging.Formatter(\u0026#39;%(asctime)s%(name)s%(levelname)-8s%(message)s\u0026#39; + f\u0026#34; User: {username}\u0026#34;) 6handler.setFormatter(formatter) 7root.handlers = [handler] 应用程序代码可以在一个模块中定义和配置父记录器，并在单独的模块中创建（但不配置）子记录器，并且对子记录器的所有调用都将传递给父记录器。\n比如上面的 logging.getLogger() # 同 logging.getLogger('') 其实就是获取了 root logger 并作修改。 上述代码写在 @app.before_request 函数中，会对所有的日志输出有影响； 如果写在 @app.after_request 函数中，只会影响 werkzeug 的日志输出。 比如在flask应用中我们的目录为app\n1# create logger with app and config it 2logging.getLogger(\u0026#34;app\u0026#34;).setLevel(log_level) 那么所有的 app.* 文件下的 logger 都会这个父记录器的影响。\n","date":"Nov 26, 2019","img":"/images/bg/bg.jpeg","permalink":"/series/python/flask-inject-log/","series":["Python"],"tags":["Python3","Web","Log","Flask"],"title":"Flask Logger"},{"categories":["Algorithm"],"content":"一般认为，博弈主要可以分为合作博弈和非合作博弈，他们的区别在于博弈方之间是否存在一个具有约束力的协议\n博弈论 博弈题库 （一）巴什博奕（Bash Game）： 只有一堆n个物品，两个人轮流从这堆物品中取物，规定每次至少取一个，最多取m个。最后取光者得胜。\n分析： 假如m=3。(F记为必败点，W记为必胜点) 用0-n的数字来标记物品 物品 0 1 2 3 4 5 6 7 8 9 ...n 胜负 F W W W F W W W F W ....  取0代表没有物品可以取了，输 在1 2 3节点取物品时候分别可以取1 2 3个物品就取完了，赢 综上可知：你只要保证取完物品之后下一人面对F点，那么这个人一定输，你就一定赢。\n（如：在节点6，取2个物品，那么下一个人在节点4开始取，而节点4是必输点，所以6是必赢点。再如节点8，不管如何取，下一个人都在5 6 7这3个必胜节点开始取，所以8是必输点。）\n从此可以推出4 5 6 7 8 9\u0026hellip;. 之后节点的胜负情况，从中找出规律。 HDU相关题型1846 2147 1536 1848\n（二）威佐夫博奕（Wythoff Game）： 有两堆各若干个物品，两个人轮流从某一堆或同时从两堆中取同样多的物品，规定每次至少取一个，多者不限，最后取光者得胜。\n我们用（ak，bk）(ak ≤ bk,k=0,1,2,\u0026hellip;)表示两堆物品的数量并称其为局势，如果甲面对（0，0）那么甲已经输了，这种局势我们称为奇异局势。前几个奇异局势是：（0，0）、（1，2）、（3，5）、（4，7）、（6，10）、（8，13）、（9，15）、（11，18）、（12，20）。 可以看出,a0=b0=0,ak是前面未出现过的最小自然数,而 bk= ak + k。\n以下内容转自： http://www.cppblog.com/longshen/archive/2013/03/14/83020.html#Post (ak,bk)(ak ≤ bk ,k=0,1,2,\u0026hellip;,n)表示奇异局势 求法： ak =[k(1+√5)/2], bk= ak + k (k=0,1,2,\u0026hellip;,n 方括号表示取整函数) 判断： Gold=(1+sqrt(5.0))/2.0； 1）假设（a，b）为第k种奇异局势(k=0,1,2\u0026hellip;) 那么k=b-a; 2）判断其a==(int)(k*Gold),相等则为奇异局势\n（注：采用适当的方法,可以将非奇异局势变为奇异局势. 假设面对的局势是(a,b) 若 b = a,则同时从两堆中取走 a 个物体,就变为了奇异局势(0,0)；\n   如果a = ak,    1.1 b \u0026gt; bk, 那么,取走b - bk个物体,即变为奇异局势(ak, bk)； 1.2 b \u0026lt; bk 则同时从两堆中拿走 ak – a[b – ak]个物体,变为奇异局势( a[b – ak] , a[b – ak]+ b - ak)； 2 如果a = bk , 2.1 b \u0026gt; ak ,则从第二堆中拿走多余的数量b – ak 2.2 b \u0026lt; ak ,则 若b = aj (j \u0026lt; k) 从第一堆中拿走多余的数量a– bj; (a \u0026gt; bj) 若b = bj (j \u0026lt; k) 从第一堆中拿走多余的数量a– aj; ( a \u0026gt; aj) ） 相关题型：POJ 1067 HDU1527 HDU 2177\n（三）尼姆博奕（Nimm Game）： 有n堆各若干个物品,两个人轮流从某一堆取任意多的物品,规定每次至少取一个,多者不限,最后取光者得胜.\n这种情况与二进制有密切关系。 计算机算法里面有一种叫做按位模2加，也叫做异或的运算，我们用符号（+）表示。 任何奇异局势（a，b，c）都有a（+）b（+）c =0。\n如果我们面对的是一个非奇异局势（a，b，c），要变为奇异局势： 假设 a \u0026lt; b \u0026lt; c,我们只要将 c 变为 a（+）b,即可,因为有如下的运算结果: a（+）b（+）(a（+） b)=(a（+）a)（+）(b（+）b)=0（+）0=0。要将c 变为a（+）b，只要从 c中减去 c-（ a（+）b）即可。\n相关题型：HDU 1850 HDU 1944 pku 2234 hdu 1730 pku 1740 pku 1704 pku 1082\n","date":"Nov 18, 2019","img":"/images/bg/bbg.jpg","permalink":"/categories/algorithm/game-theory/","series":null,"tags":null,"title":"Game Theory"},{"categories":[],"content":"如何获取你知道/不知道的 wifi 密码\n 本文仅限于学习，请勿用于非法用途 否则后果作者概不负责\n 获取链接过的 wifi 密码 Windows: 管理员运行：\n1for /f \u0026#34;skip=9 tokens=1,2 delims=:\u0026#34; %i in (\u0026#39;netsh wlan show profiles\u0026#39;) do @echo %j | findstr -i -v echo | netsh wlan show profiles %j key=clear 还有一种方法：可以获取指定名称的wifi信息 step 1:获取所有链接过的wifi名称\n1netsh wlan show profile step 2:指定wifi名称获取相关信息( 下面代码中wifi_name 是step 1 中列出的名称 )\n1netsh wlan show profile wifi_name key=clear Mac 打开 keychain 钥匙串 选择 系统，种类：密码 通过Wi-Fi名字查看密码\nUbuntu 从配置文件中获取 psk 的值\n1$ sudo grep psk= /etc/NetworkManager/system-connections/* 如何获取邻居家 wifi 密码 环境准备  系统：macOs Mojave 双核8G 工具：aircrack-ng; wireshark; hashcat 参考链接：Louis Abraham\u0026rsquo;s   开始 官网下载：wireshark 由于原本就有 homebrew ，不再重述下载过程。 首先下载 aircrack-ng ，这里用于暴力破解 Wi-Fi 密码\n1brew install aircrack-ng hashcat 世界上最快的密码破解程序\n1brew install hashcat 用 wireshark 获取 WPA 包 WPA 简介 WPA（英语：Wi-Fi Protected Access），意即“Wi-Fi访问保护”，是一种保护无线网络（Wi-Fi）访问安全的技术标准。\nMojave 不能使用 airport 抓包 1sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/sbin/airport 2 3sudo airport -s 4// Ctrl-C to stop capturing after 2-5 minutes 5sudo airport en1 sniff $CHANNEL 6 这个方式简单，但是新的系统不支持，只能通过 wireshark 抓包\nwireshark 抓包 开启监控模式 filter:\n1eapol or wlan.fc.type_subtype == 0x08 抓取 5分钟 左右，保存.pcap\n爆破 通过 aircrack-ng 暴力破解密码 1aircrack-ng test.pcap -w 密码字典文件 如果有 WPA (1 handshake) 则输入前面的编号 Index number of target network ? 4643\n否则重复上述 wireshark 抓包过程\n如果这步成功，成功的关键就在于密码字典，可以在github搜一下，可以找到的字典集我都试过（有上千万的数据了），目前我没有好的可以推荐，因为没有成功破解我邻居的密码:)尬\u0026hellip;\nhashcat 破解 在线转化文件pcap-\u0026gt;hccapx https://hashcat.net/cap2hccapx/ 在我本子上跑温度飙到了 96c 只能放弃\n","date":"Nov 18, 2019","img":"/images/bg/bbg.jpg","permalink":"/series/linux/get-wlan-passwd/","series":["Linux"],"tags":["System","Wifi","TCP/IP","HTTP"],"title":"Get Wlan Password"},{"categories":null,"content":"Linux 先来100道题开开胃\ncron daemon Cron 是一个守护程序，用于计划可以想象的任何类型的任务（管理系统日常任务的调度）。Windows 上被称为“Task Scheduler” 命令crontab常见于Unix-Like系统，用于设置周期性被执行的指令。 该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。\nblock device 块设备是代表某种设备的一种文件，具有可在块中读取或写入的数据。 块设备通常代表某种大容量存储单元（例如，硬盘或USB笔式驱动器上的分区）。\nDetail more more命令是一个基于vi编辑器文本过滤器，它以全屏幕的方式按页显示文本文件的内容 该命令可以一次显示一页内容，满屏后停下来\ndu 查看在当前目录下还有多大剩余空间du .\nchmod 更改文件的权限\nrunlevel \u0026amp; telinit runlevel读取系统的utmp文件夹定位系统的运行级别记录，然后显示当前系统的执行等级 运行级别指的是Unix-Like系统下不同的运行模式，通常分为7等，分别是从0到6\n10 ：停机 21 ：单用户模式 32 ：多用户模式，无网络 43 ：完全的多用户模式 54 ：用户自定义 65 ：图形界面多用户模式 76 ：重启 telinit命令可以设置当前系统的运行等级\natq 可以列出定义在以后特定时间运行一次的所有任务\nset set PS1=\u0026quot;[\\u\\w\\t]\\$\u0026quot; ; export PS1的作用是 改变命令提示符\nskel /etc/skel目录作用是在建立新用户时，用于初始化用户根目录\nexport 显示和设置环境变量值 export PATH=$PATH:/usr/local/bin #将/usr/local/bin加入环境变量中\nchmod linux 中权限的粒度有 拥有者 、群组 、其它组 三种\n1-rw------- (600) 只有拥有者有读写权限。 2-rw-r--r-- (644) 只有拥有者有读写权限；而属组用户和其他用户只有读权限。 3-rwx------ (700) 只有拥有者有读、写、执行权限。 4-rwxr-xr-x (755) 拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。 5-rwx--x--x (711) 拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。 6-rw-rw-rw- (666) 所有用户都有文件读、写权限。 7-rwxrwxrwx (777) 所有用户都有读、写、执行权限。 算法： rw- = 110 = 6\nuserdel 删除使用者帐号及相关档案\numount 卸除文件系统\numask 用来设置限制新文件权限的掩码 从权限中“拿走”相应的位,且文件创建时不能赋予执行权限\n对于目录，用户所能拥有的最大权限是777；对于文件，用户所能拥有的最大权限是目录的最大权限去掉执行权限，即666 对于root用户，他的umask值是022。当root用户创建目录时，默认的权限就是用最大权限777去掉相应位置的umask值权限，即对于所有者不必去掉任何权限，对于所属组要去掉w权限，对于其他用户也要去掉w权限，所以目录的默认权限就是755； 当root用户创建文件时，默认的权限则是用最大权限666去掉相应位置的umask值，即文件的默认权限是644。\nwhich 查找环境变量中的文件 查找一个二进制命令的路径\nmount 加载指定的文件系统\nmount -a 用来装载所有在 /etc/fstab 中定义的文件系统\nnice 以指定的优先级运行命令，这会影响相应进程的调度。 如果不指定命令，程序会显示当前的优先级。优先级的范围是从 -20 (最大优先级) 到 19 (最小优先级)。\ntail 显示一个文件最后几行\ntr tr a-z A-Z 把一个流中所有字符转换成大写字符\ndmesg 被用于检查和控制内核的环形缓冲区。 Linux 启动信息保存在/var/log/dmesg文件里\n显示系统中各个分区中inode的使用情况 df -i\n显示Linux系统中注册的用户数 wc --lines /etc/passwd\nkill 9 的含义 sends SIGTERM to the process whose PID IS 9\n今天午夜运行命令 cmd1 echo \u0026quot;cmd1\u0026quot; | at midnight\n用户的变量设置 /etc/profile\n如果cmd1成功执行，则执行cmd2命令 cmd1\u0026amp;\u0026amp;cmd2\n定义网卡的I/O地址 cat /proc/ioports\nLinux中，提供TCP/IP包过滤功能的软件 iptables\n暂停一个打印队列 lpc\n哪个协议使用了二个以上的端口 FTP\n哪个命令可以压缩部分文件 tar -czvf filename.tgz *\n解压缩tar文件 tar -xzvf filename.tgz\nping使用的协议是 ICMP\n查看网络故障的命令 ping telnet netstat\n拨号上网使用的协议 PPP\n定义了网络服务的端口 /etc/services\n查看网卡的中断 cat /proc/interrupts\n查看内存使用 free [-b] [-k] [-m] [-g] [-t] [-s]\n前面的对应的都是单位； -t: 输出内存和swap分区的总量 -s: 持续显示，间隔秒数\n后台运行程序 nohup { -p pid | Command [ Arg ... ] [ \u0026amp; ] }\nnohup 命令忽略所有的挂起 (SIGHUP) 信号，或者修改用 -p 选项指定的进程来忽略所有的挂起 (SIGHUP) 信号。 在注销后还可以使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 \u0026amp;（表示“and”的符号）到命令的尾部。 注：使用 -p pid 时，指定进程的输出将不会重定向到 nohup.out。\n CPU CPU 的全称是 Central Processing Unit CPU 的核心是从程序或应用程序获取指令并执行计算。此过程可以分为三个关键阶段：提取，解码和执行。CPU从系统的主存中提取指令，然后解码该指令的实际内容，然后再由 CPU 的相关部分执行该指令。 几乎所有的冯·诺伊曼型计算机的CPU，其工作都可以分为5个阶段：取指令、指令译码、执行指令、访存取数、结果写回\nMySQL ","date":"Nov 15, 2019","img":"/images/bg/bg2.jpeg","permalink":"/series/linux/linux-interview/","series":["Linux"],"tags":["System","Linux"],"title":"Linux Interview"},{"categories":[],"content":"Code Template Python多进程写入文件(multiprocessing template) 参考文档 1#multiprocessing template 2import multiprocessing 3 4def write_file(result): 5 f = open(\u0026#39;\u0026#39;) 6 f.write(result) 7 8def process(args): 9 \u0026#39;\u0026#39;\u0026#39; 10work 11\u0026#39;\u0026#39;\u0026#39; 12 return result 13 14if __name__ == \u0026#39;__main__\u0026#39;: 15 pool = multiprocessing.Pool(processes = 100) 16 for t in tasks: 17 pool.apply_async(process, (t, ),callback=write_file) 18 pool.close() 19 pool.join() 高次方取模 次方求模模板 就是求(a^b)% p其中 a, b, p 数值比较大 取余公式：(a*b)% p = (a%p * b%p)% p 1//次方求模模板 2template\u0026lt;class Type\u0026gt; 3inline Type ModPow(Type m,Type n,Type p) //m的n次方模p 4{ 5 if(n==0) return 1; 6 if (n==1) return m%p; 7 Type tmp=ModPow(m,n\u0026gt;\u0026gt;1,p); 8 return (tmp*tmp%p)*((n%2?m:1)%p)%p; 9} 高次方求模 1/*高次方求模： 2比如a的b次方对c求模 3我们可以把b 化为二进制形式看那一位有1 4比如b=10101则 a^b=a^(10000)*a^(100)*a^(1) 5以函数形式体现：*/ 6template\u0026lt;class Type\u0026gt; 7inline Type han() 8{ 9 Type t,s; 10 for(t=a,s=1;b;b\u0026gt;\u0026gt;=1,t*=t,t%=c)//用b\u0026gt;\u0026gt;=1查看b中1 11 if(b\u0026amp;1){s*=t;s%=c;} 12 return s%c; 13} 大数取模的模板 取余公式：(a+b)% p = (a%p+b%p)% p;\n1char big_number[MAX]; 2template\u0026lt;class type\u0026gt; 3type big_mod(char *a,type mod){ 4 type len=strlen(a),result=0; 5 for(int i=0;i\u0026lt;len;i++){ 6 result=((result*10)%mod+(a[i]-\u0026#39;0\u0026#39;)%mod)%mod; 7 //如果数据不算太大，可以写成这样来节省时间result=(result*10+a[i]-\u0026#39;0\u0026#39;)%mod; 8 } 9 return result; 10} 11//test 12char s[200]; 13int main() 14{ while(gets(s)) 15 cout\u0026lt;\u0026lt;big_mod\u0026lt;int\u0026gt;(s,2)\u0026lt;\u0026lt;endl; 16} 哈希模版(hash template) 1const int MAX=1000003; 2template \u0026lt;class T\u0026gt; 3class hash 4{ 5private: 6 int pos; 7 int next[MAX]; 8 int head[MAX]; 9 T key[MAX]; 10public: 11 hash(); 12 bool search(T x); 13 void push(T x); 14}; 15template \u0026lt;class T\u0026gt; 16hash\u0026lt;T\u0026gt;::hash() 17{ 18 pos=0; 19 memset(next,-1,sizeof(next)); 20 memset(head,-1,sizeof(head)); 21 //memset(key,-1,sizeof(key)); 22} 23template \u0026lt;class T\u0026gt; 24inline bool hash\u0026lt;T\u0026gt;::search(const T x) 25{ 26 int temp=x%MAX; 27 int t=head[temp]; 28 while(t!=-1) 29 { 30 if (key[t]==x) 31 { 32 return 1; 33 } 34 t=next[t]; 35 } 36 return 0; 37} 38template \u0026lt;class T\u0026gt; 39inline void hash\u0026lt;T\u0026gt;::push(const T x) 40{ 41 int temp=x% MAX; 42 if (head[temp]!=-1) 43 { 44 next[pos]=head[temp]; 45 } 46 head[temp]=pos; 47 key[pos]=x; 48 pos++; 49} Python 协程处理 requests 1from gevent import monkey 2monkey.patch_all() 3 4import sys 5reload(sys) 6sys.setdefaultencoding(\u0026#39;utf-8\u0026#39;) 7 8import requests 9import time 10import gevent 11from gevent import pool 12import re 13import math 14import pymysql 15import functools 16from DBUtils.PooledDB import PooledDB 17from datetime import datetime 18from collections import defaultdict 19 20# db ip 21\u0026#39;\u0026#39;\u0026#39; 22db msg 23\u0026#39;\u0026#39;\u0026#39; 24# 数据库连接池 25mysql_db_pool = PooledDB(creator=pymysql, mincached=1, maxcached=2, maxconnections=100, host=base_ip, port=3306, 26 user=base_user, passwd=base_pwd, db=base_db, charset=\u0026#39;utf8\u0026#39;, use_unicode=False, blocking=True) 27# target url 28URL = \u0026#39;\u0026#39; 29 30 31complete_count = 0 32# log-- 33func_count_dict = defaultdict(int) 34 35def func_time_logger(fun): 36 if fun.__dict__.get(\u0026#39;mioji.aop_utils.logger\u0026#39;, False): 37 return fun 38 fun.__dict__[\u0026#39;mioji.aop_utils.logger\u0026#39;] = True 39 40 @functools.wraps(fun) 41 def logging(*args, **kw): 42 func_count_dict[fun.__name__] += 1 43 begin = datetime.now() 44 result = fun(*args, **kw) 45 end = datetime.now() 46 func_count_dict[fun.__name__] -= 1 47 print \u0026#39;func {0}, cost:{1}, ex:{2}\u0026#39;.format(fun.__name__, end - begin , func_count_dict[fun.__name__]) 48 return result 49 50 return logging 51# --log 52 53# 获得代理 54@func_time_logger 55def get_PROXY(): 56 # 代理url 57 R = requests.get(url) 58 p = R.content 59 if p.startswith(\u0026#39;10.\u0026#39;): 60 # if p.split(\u0026#39;:\u0026#39;)[0] in SOCKS_PROXY: 61 PROXY = { 62 \u0026#39;http\u0026#39;: \u0026#39;socks5://\u0026#39; + p, 63 \u0026#39;https\u0026#39;: \u0026#39;socks5://\u0026#39; + p 64 } 65 else: 66 self.real_ip = p.split(\u0026#39;:\u0026#39;)[0] 67 proxy_type = \u0026#39;http\u0026#39; 68 PROXY = { 69 \u0026#39;https\u0026#39;: \u0026#39;http://\u0026#39; + p, 70 \u0026#39;http\u0026#39;: \u0026#39;http://\u0026#39; + p, 71 } 72 73 return PROXY 74 75# requests 76@func_time_logger 77def get_request_data(x, y): 78 i = 0 79 while i \u0026lt; 3: 80 try: 81 r = requests.get(URL, proxies=get_PROXY(), timeout=(5, 10)) 82 data = r.content 83 return data 84 except: 85 print \u0026#39;get error\u0026#39; 86 i += 1 87 return None 88 89# process function 90@func_time_logger 91def process(a1,a2): 92 93 get_request_data(x,y) 94 95 \u0026#39;\u0026#39;\u0026#39; 96other works 97\u0026#39;\u0026#39;\u0026#39; 98 99 global complete_count 100 complete_count += 1 101 print \u0026#39;end {0}\u0026#39;.format(sid) 102 print \u0026#39;complete {0}\u0026#39;.format(complete_count) 103 104# 异步协程处理请求量大的需求 105if __name__ == \u0026#39;__main__\u0026#39;: 106 s = time.time() 107 108 gs = [] 109 for data in data_list: 110 g = execute_pool.apply_async(process, args=(a1, a2,)) 111 gs.append(g) 112 gevent.joinall(gs) 113 114 print time.time() - s 115 ","date":"Nov 10, 2019","img":"/images/bg/computer2.jpg","permalink":"/series/python/code-template/","series":["Manual"],"tags":["python3"],"title":"Code Template"},{"categories":[],"content":"每天学点数学  数学中的一些美丽定理具有这样的特性：它们极易从事实中归纳出来，但证明却隐藏的极深。\u0026ndash; 高斯 在数学你不明白任何东西。你只使用它们。\u0026ndash; 冯·诺伊曼\n 哥德巴赫猜想 概念 任一大于2的偶数，都可表示成两个素数之和。 而将一个给定的偶数分拆成两个素数之和，则被称之为此数的哥德巴赫分拆。 换句话说，哥德巴赫猜想主张每个大于等于4的偶数都是哥德巴赫数——可表示成两个素数之和的数。\n欧拉注明此一猜想可以有另一个等价的版本:\n1(A): 任一大于2的偶数都可写成两个质数之和。 2 3(B): 任一大于5的奇数都可写成三个素数之和。 今日常见的猜想陈述为欧拉的版本，(A)亦称为“强哥德巴赫猜想”或“关于偶数的哥德巴赫猜想”。(B)称为“弱哥德巴赫猜想”或“关于奇数的哥德巴赫猜想”。其中(B)从(A)推出，所以如果(A)得证那么(B)也得证。\n证明 陈氏定理（陈景润的）\n所谓“陈氏定理”的“1+2”，是指：对于任给一个大偶数 N，总可以找到奇素数p', p'\u0026lsquo;或p1,p2,p3，使得下列两式至少有一个成立：\n1N = p\u0026#39; + p\u0026#39;\u0026#39; 2N = p1 + p2p3 两式可以同时成立。偶数较小时，如 N=62，则可以有 62=43+19 以及 62=7+5×11\n欧拉定理 概念 定理一 连通的无向图有欧拉路径的充要条件是：\nG中奇顶点（连接的边数量为奇数的顶点）的数目等于0或者2。\n连通的无向图是欧拉环（存在欧拉回路）的充要条件是：\nG中每个顶点的度都是偶数。\n定理二\n如果连通无向图G 有 2k 个奇顶点，那么它可以用 k 笔画成，并且至少要用 k 笔画成。\n对有向图来说，一笔画不仅指遍历所有边，而且要遵循正确的方向。 严谨地说，一个连通有向图G有欧拉路径，指存在一个顶点，从它出发，沿着有向边的方向，可以不重复地遍历图中所有的边。 有向图的欧拉回路则是指可以从某一顶点开始，沿有向边的方向不重复地遍历所有边，然后回到原来出发的顶点。用类似于定理一中证明的思路，可以得到有向图一笔画的判定准则：\n一个连通的有向图可以表示为一条从顶点u到v的（不闭合的）欧拉路径的充要条件是：\nu的出度（从这个顶点发出的有向边的数量）比入度（指向这个顶点的有向边的数量）多1， v 的出度比入度少1，而其它顶点的出度和入度都相等。\n一个连通的有向图是欧拉环（存在欧拉回路）的充要条件是以下两个之一：\n1 1.每个顶点的出度和入度都相等； 2 2.存在一系列的（有向）环C1 C2... Cm，使得图G里的每一条边都恰好属于某一个环。 一笔画问题讨论的是能否不重复地遍历一个图的所有边，至于其中有否顶点的遍历或重复经过则没有要求。哈密顿问题讨论的则是顶点的遍历：能否不重复地遍历一个图的所有顶点？\n参考： Tutorials How to find whether a given graph is Eulerian or not? Sketch of Eulerian Circuit Algorithm 同余定理 数学上，同余（英语：congruence modulo，符号：≡）是数论中的一种等价关系。当两个整数除以同一个正整数，若得相同余数，则二整数同余。同余是抽象代数中的同余关系的原型。最先引用同余的概念与“≡”符号者为德国数学家高斯。\n定义：两个正整数a,b如果它们初一正整数m所得的余数相同，则称a,b对于模m同余。记作：a≡b(mod m)\n性质 性质1：a≡b(mod m) =\u0026gt; c*m=a-b ,c属于Z（即是说 a 和 b 之差是 m 的倍数） 换句话说：a≡b(mod m) =\u0026gt; m | (a-b) （即是说 m 能整除 a 和 b 之差，同时**m | (a-b) ** 也是a,b关于m同余的充要条件）\n性质2： 同余关系具有反身性、对称性与传递性，即\n 1）a≡a (mod m);\n2）若a≡b (mod m), 则b≡a (mod m);\n3）若a≡b (mod m), b≡c (mod m)，则a≡c (mod m).\n 性质3 ：若a≡b(mod m), c≡d (mod m),则\n 1）a+c≡b+d (mod m);\n2）a-c≡b-d (mod m);\n3）ac≡bd (mod m).\n 推论 若a≡b(mod m),n为自然数，则an≡bn (mod m)。\n性质4 除法定理一：如果ka≡kb(mod m)，且(m,k)=1（即k和m互质），则a≡b(mod m)\n性质4 除法定理二： 也即是说：m 的因数也可以整除(a-b)。 m是n的倍数: m = c *n , n | m , 因为m|(a-b) , 所以 n | (a-b) =\u0026gt; a≡b (mod n)\n同余关系式 威尔逊定理\n威尔逊定理给出了判定一个自然数是否为素数的充分必要条件。 即：当且仅当p为素数时：(p-1)! ≡ -1 (mod p) 但是由于阶乘是呈爆炸增长的，其结论作为了解。\n费马小定理\n假如a是一个整数，p是一个质数，那么 是p的倍数，可以表示为a^p≡a (mod p)\n当(a,p)=1 (a不是p的倍数)时定理可以写为：a^(p-1) ≡1 (mod p)\n费马小定理是欧拉定理的一个特殊情况，看下面\n欧拉定理\n欧拉定理（也称费马-欧拉定理或欧拉函数定理）是一个关于同余的性质:若 n,a为正整数，且 n,a互素（即 gcd(a,n)=1）则\na^φ(n) ≡1 (mod m)\n即 a^φ(n)与1在模n下同余；φ(n)为欧拉函数。\n当n是素数的时候， φ(n)=n-1，所以欧拉定理变为： a^(n-1) ≡ 1 (mod m) or a^n ≡ a (mod m) 这就是费马小定理。\n卡迈克尔函数 阶乘幂 参考: 知行执行 wikipedia 必须掌握-微积分基础 导数 四则运算\n特征向量新公式 ","date":"Nov 7, 2019","img":"/images/bg/mathbg.jpg","permalink":"/series/math/mathday/","series":["Math"],"tags":["Math"],"title":"Math Every"},{"categories":[],"content":" 仅供学习交流，严禁用于商业用途，请于24小时内删除\n 从排名及考前的几个解析网站爬出来的解析链接，链接背后的技术以后研究了再跟进\n \u0026ldquo;https://www.administratorw.com/admin.php?url=\"  \u0026ldquo;https://yun.odflv.com/?url=\"  \u0026ldquo;http://goudidiao.com/?url=\"  \u0026ldquo;https://jx.maoyun.tv/index.php?id=\"  \u0026ldquo;http://www.1717yun.com/jx/vip/index.php?url=\"  \u0026ldquo;http://api.xfsub.com/index.php?url=\"  \u0026ldquo;http://q.z.vip.totv.72du.com/?url=\"  \u0026ldquo;http://jx.api.163ren.com/vod.php?url=\"  \u0026ldquo;http://www.0335haibo.com/tong.php?url=\"  \u0026ldquo;http://www.wmxz.wang/video.php?url=\"  \u0026ldquo;http://www.vipjiexi.com/yun.php?url=\"  \u0026ldquo;https://hhh.qqplayer.cn/beac.php?url=\"  \u0026ldquo;http://j.zz22x.com/jx/?url=\"  \u0026ldquo;http://api.nepian.com/ckparse/?url=\"  \u0026ldquo;https://vip.bljiex.com/?v=\"  \u0026ldquo;http://vip.jlsprh.com/index.php?url=\"  \u0026lsquo;http://api.baiyug.vip/index.php?url='  \u0026lsquo;http://jiexi.071811.cc/jx2.php?url='  \u0026lsquo;http://app.baiyug.cn:2019/vip/?url='  \u0026lsquo;http://api.nepian.com/ckparse/?url='  \u0026lsquo;http://j.zz22x.com/jx/?url='  \u0026lsquo;http://api.wlzhan.com/sudu/?url='  \u0026ldquo;https://jiexi.071811.cc/jx.php?url=\"  \u0026ldquo;https://vip.mpos.ren/v/?url=\"  \u0026ldquo;http://jx.618g.com/?url=\"  \u0026ldquo;http://jx.cesms.cn/?url=\"  \u0026ldquo;https://660e.com/?url=\"  \u0026ldquo;https://www.ikukk.com/?url=\"   复制视频的链接，粘贴到以上链接后面\n","date":"Nov 5, 2019","img":"/images/bg/bg2.jpeg","permalink":"/series/python/parse-vip-video/","series":["Python"],"tags":["Web"],"title":"VIP Video Parse Link"},{"categories":null,"content":"Build Blog  Gitpage + Hexo 搭建个人博客，全程免费，记录注意事项。\n 总览  Gitpage 慷慨的 github 给我们的网站托管 Freenom 免费域名 DNSPod 免费的DNS解析 Markdown 熟悉一些 Markdown 的语法 StaticSite A List of Static Site Generators for JAMstack Sites  Gitpage create a new repository named username.github.io 创建一个新的代码库，名字：[github账号名].github.io\nFreenom   1.sign in(我是通过google账号登录的) -\u0026gt; Services -\u0026gt; Register a new domain.\n  2.想guo名字，baidu/taobao 之类的想想就算了，想一遍过就想那种生僻的(手动滑稽) -\u0026gt; check availability -\u0026gt; 成功的话就选择免费的那些 get it now! -\u0026gt; 然后 checkout\n  3.结账的时候注意 Period 选最大的期限 12 Months@Free (有钱可以10 years) -\u0026gt; 如果失败了，通过 https://whoer.net/zh 查看当前代理所在国家，要和个人资料里国家填写一致，包括地址街道(不知道的话网上搜个地址吧)也要和所在国家一致，邮编最好也是对应街道的，手机号姓名什么都可随便填。\n  4.成功后不会提示 Attention! -\u0026gt; Services -\u0026gt; My domains 查看你的域名 -\u0026gt; Manage Domain -\u0026gt; Management tools -\u0026gt; Use custom nameservers (enter below) 这里要填写的就是DNSPod域名服务器的域。\n  DNSPod   登录到控制台 -\u0026gt; DNS管理 -\u0026gt; 我的域名 -\u0026gt; 添加刚才申请到的域名 -\u0026gt; 其中记录类型为 NS 的记录值填写到上面4.的最后一步\n  添加几个记录：这里可以参考 gitpage的指导      主机记录 记录类型 记录值     www CNAME [github username].github.io.   @ A 185.199.108.153   @ A 185.199.109.153   @ A 185.199.110.153   @ A 185.199.111.153     点击刷新，我的情况是直接就可以使用  StaticSite 选择一个静态站点生成工具，我用的 hexo 跟着文档做就好了，主要是配置文件的修改，遇到问题才会去看源码。开始遇到的坑是图片的绝对路径错误 //img/xxx.jpg 生成后是这种路径，不过我添加了自定义域名后自动解决了这个问题\n常用的hexo命令：\n1hexo new post [name of post] 2hexo generate 3hexo serve 4hexo clean \u0026amp;\u0026amp; hexo deploy 最后 \u0026amp;\u0026amp; 注意   在开始创建的代码仓库设置里，设置自己的Custom domain，自定义域名\n  Freenom 购买免费域名时，当前 ip 所在地和账号资料的位置信息一定要对应\n  hexo deploy后会覆盖自定义域名后生成的CNAME文件。把要保存的文件放在source文件夹里。\n  我更改了一些_config.yaml配置后permalink: :title/，发布成功，github 更新成功，本地 serve 也都正常，但是页面仍旧是之前的。尝试删除 .nojekyll文件和.deploy_git目录后再次发布成功。\n  站长工具 百度统计 https://tongji.baidu.com/ _config.yaml 配置参数 ba_track_id: ol14dc912ccw01s4cxd12ss0c1acwz\nGoogle分析 https://analytics.google.com/ 这里 fork 的 hexo 主题的源码似乎有 bug，需要时使用 Google Analytics 提示的最新代码 _config.yaml 配置参数 ga_track_id: UA-xxx-x\n接入 google 广告 https://www.google.co.in/adsense/start/#/?modal_active=none 代码写在/hexo-theme-huxblog/themes/huxblog/layout/_partial/footer.ejs\n要注意的是：写在\u0026lt;head\u0026gt;\u0026lt;/head\u0026gt;之间\n一审失败，提示我只有2篇帖子，需要有更多的帖子，并且运行几个月后再来试试。\n站点地图 让百度，Google收录自己的博客站点\n百度 地址链接 验证主要有三种方法：\n 1.文件验证 我最终是通过这个方式通过的。试了一下不能直接复制里面的内容，以同名文件的形式传到 github 上；须上传下载的原文件才可以。 2.HTML标签验证 没试过 3.CNAME验证 开始通过这个方式验证，看破了帮助，死活过不去，于是乎换成了第一种  Google 地址链接 也可以在Google搜索中输入site:[your_domain] like site:vongola.tk 没收录的话就会提示你去点击链接请使用 Google Search Console 验证方式： 在 DNS 解析加入提示信息的记录即可\n   记录类型 记录值     TXT google-site-verification=xxx    1Tips: 里面还提供了测试网站速度的工具，很有趣 其他 接入评论功能 https://disqus.com/ -\u0026gt; I want to install Disqus on my site -\u0026gt; 填写信息 重要的是Websit Name 要求全网唯一，设定后不可改变 -\u0026gt; 设置_config.yaml的参数disqus_username: [上一步的Websit Name] 据说有收益，定期会审查，如果你的网站满足 Reveal，就会在一周内被联系。(emmm\u0026hellip;)\n支持 TOC https://github.com/bubkoo/hexo-toc 我的设置：\n1# _config.yaml 2toc: 3 maxdepth: 3 4 class: toc 5 slugify: transliteration 6 decodeEntities: false 7 8# css 9.toc { 10 float: right; 11 margin-left: 40px; 12 padding: 10px 20px; 13 background: #f1f1f1; 14 border-radius: 10px; 15 box-shadow: 0 0 3px #bbb; 16} 17 18# post 19 支持置顶 安装插件\n1npm uninstall hexo-generator-index --save 2npm install hexo-generator-index-pin-top --save post 的配置\n1--- 2top: true 3--- 在线生成ico ","date":"Nov 3, 2019","img":"/images/bg/computerp.png","permalink":"/posts/blog/","series":["Manual"],"tags":["Blog","github","dns","domain"],"title":"Build Blog"},{"categories":[],"content":"exec() Syntax: 1exec(object[, globals[, locals]]) 2 3:param object: As already said this can be a string or object code 4:param globals: This can be a dictionary and the parameter is optional 5:param locals: This can be a mapping object and is also optional eg.\n1from math import * 2exec(\u0026#34;print(factorial(5))\u0026#34;, {\u0026#34;factorial\u0026#34;:factorial}) eval() Syntax: 1eval(expression[, globals[, locals]]) diff with exec() 1.eval accepts only a single expression, exec can take a code block that has Python statements: loops, try: except:, class and function/method definitions and so on. 2.eval returns the value of the given expression, whereas exec ignores the return value from its code, and always returns None (in Python 2 it is a statement and cannot be used as an expression, so it really does not return anything).\n1\u0026gt;\u0026gt;\u0026gt; a = 5 2\u0026gt;\u0026gt;\u0026gt; eval(\u0026#39;37 + a\u0026#39;) # it is an expression 342 4\u0026gt;\u0026gt;\u0026gt; exec(\u0026#39;37 + a\u0026#39;) # it is an expression statement; value is ignored (None is returned) 5\u0026gt;\u0026gt;\u0026gt; exec(\u0026#39;a = 47\u0026#39;) # modify a global variable as a side effect 6\u0026gt;\u0026gt;\u0026gt; a 747 8\u0026gt;\u0026gt;\u0026gt; eval(\u0026#39;a = 47\u0026#39;) # you cannot evaluate a statement 9Traceback (most recent call last): 10 File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; 11 File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1 12 a = 47 13 ^ 14SyntaxError: invalid syntax compile() Syntax: 1compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1) It can be used to speed up repeated invocations of the same code with exec or eval by compiling the source into a code object beforehand.\ncompile ","date":"Nov 3, 2019","img":"/images/bg/bgh3.jpg","permalink":"/series/python/python-exec-object/","series":["Python"],"tags":["Python3"],"title":"Python Exec Object"},{"categories":[],"content":"Python Encoding b'' 型 1b\u0026#39;hello\u0026#39;.decode() u'' 型 1a=u\u0026#39;\\xe5\\x9c\\xa3\\xe5\\xbd\\xbc\\xe5\\xbe\\x97\\xe5\\xa0\\xa1\\xe6\\x8e\\x92\\xe5\\x90\\x8d\\xe7\\xac\\xac1 \\xe9\\xa4\\x90\\xe5\\x8e\\x85(\\xe5\\x85\\xb18,650 \\xe9\\x97\\xb4)\u0026#39; 2print(a.encode(\u0026#39;raw-unicode-escape\u0026#39;)) \\u00 型 1\u0026gt;\u0026gt;\u0026gt; a = u\u0026#39;\\u00e6\\u0097\\u00a5\\u00e6\\u009c\\u00ac\\u00e5\\u009f\\u00bc\\u00e7\\u008e\\u0089\\u00e5\\u00b8\\u0082\\n\u0026#39; 2\u0026gt;\u0026gt;\u0026gt; print(a) 3\u0026gt;\u0026gt;\u0026gt; print(a.encode(\u0026#39;iso-8859-1\u0026#39;).decode(\u0026#39;utf-8\u0026#39;)) \\uxxxx 型 1a=\u0026#39;\\u56e0\u0026#39; 2print(a.decode(\u0026#39;unicode-escape\u0026#39;)) 1a = \u0026#39;\\u00e6\\u0097\\u00a5\\u00e6\\u009c\\u00ac\\u00e5\\u009f\\u00bc\\u00e7\\u008e\\u0089\\u00e5\\u00b8\\u0082\u0026#39; 2print(a.decode(\u0026#39;unicode-escape\u0026#39;).encode(\u0026#39;iso-8859-1\u0026#39;).decode(\u0026#39;utf8\u0026#39;)) unicode+ascii，且u前没有\\ 1#coding=utf8 2s = \u0026#39;u00e7u0088u00b1u00e5u00b0u0094u00e7u00a6u008fu00e7u0089u00b9u00e5u009fu008eu00e9u0099u0085u00e9u0085u0092u00e5u00bau0097u00e6u0098u00afu00e4u00b8u0080u00e5u00aeu00b6u00efu00bcu008cu00e8u00b7u009du00e7u00a6u00bbu00e5u00aeu0089u00e6u00a0u00bcu00e5u00b0u0094u00e5u008du009au00e7u0089u00a9u00e9u00a6u0086u00e5u0092u008cu00e5u0085u008bu00e9u009bu00b7u00e9u00bbu0098u00e6u00a1u00a5u00e4u00b8u008du00e5u0088u00b0 15 u00e5u0088u0086u00e9u0092u009fu00e7u009au0084u00e6u00adu00a5u00e8u00a1u008cu00e8u00b7u00afu00e7u00a8u008bu00e3u0080u0082u00e8u0080u008cu00e4u00b8u0094u00efu00bcu008cu00e8u00bfu0099u00e5u00aeu00b6u00e9u0085u0092u00e5u00bau0097u00e8u00b7u009du00e7u00a6u00bbu00e5u009fu0083u00e5u00b0u0094u00e7u00a6u008fu00e7u0089u00b9u00e5u00a4u00a7u00e6u0095u0099u00e5u00a0u0082u00e5u0092u008cEgapark Erfurtu00e4u00b8u008du00e5u0088u00b0 5 u00e5u0085u00acu00e9u0087u008cu00e3u0080u0082 u00e6u00adu00a4u00e9u0085u0092u00e5u00bau0097u00e6u008fu0090u00e4u00beu009bu00e9u00a4u0090u00e5u008eu0085u00e3u0080u0081u00e5u00b1u008bu00e9u00a1u00b6u00e9u009cu00b2u00e5u008fu00b0u00e5u0092u008cu00e5u00b9u00b2u00e6u00b4u0097/u00e6u00b4u0097u00e8u00a1u00a3u00e6u009cu008du00e5u008au00a1u00e3u0080u0082u00e5u00a6u0082u00e6u009eu009cu00e6u0082u00a8u00e6u0083u00b3u00e5u0096u009du00e6u009du00afu00e9u00a5u00aeu00e6u0096u0099u00e6u0094u00beu00e6u009du00beu00e4u00b8u0080u00e4u00b8u008bu00efu00bcu008cu00e9u0085u0092u00e5u0090u00a7/u00e9u0085u0092u00e5u00bbu008au00e7u00bbu009du00e5u00afu00b9u00e6u0098u00afu00e6u0082u00a8u00e7u009au0084u00e5u00a5u00bdu00e5u008eu00bbu00e5u00a4u0084u00e3u0080u0082\u0026#39; 3 4import re 5 6pattern = re.compile(r\u0026#39;((u00([a-z0-9]){2})+)\u0026#39;) 7for i in pattern.findall(s): 8 s = s.replace(i[0], i[0].replace(\u0026#39;u\u0026#39;, \u0026#39;\\\\u\u0026#39;).decode(\u0026#39;unicode-escape\u0026#39;).encode(\u0026#39;iso-8859-1\u0026#39;)) html实体 \u0026ndash; \u0026lsquo;\u0026amp;#\u0026hellip;;\u0026rsquo; 1def parse_html(self, data): 2 aa = re.findall(\u0026#39;\u0026amp;#\\d+;\u0026#39;,data) 3 xx = [html.fromstring(i).text_content() for i in aa] 4 yy = re.sub(\u0026#39;\u0026amp;#\\d+;\u0026#39;,\u0026#39;{}\u0026#39;,data) 5 yy = yy.split(\u0026#39;{}\u0026#39;) 6 res = yy[0] 7 for i in range(len(xx)): 8 res += xx[i]+yy[i+1] 9 return res ","date":"Oct 3, 2019","img":"/images/bg/ang.jpeg","permalink":"/series/python/python-encoding/","series":["Python"],"tags":["Python3"],"title":"Python Encode"},{"categories":[],"content":"按位运算符C++共有6个\u0026laquo; , \u0026raquo; , ~ , \u0026amp; , | , ^ 移位运算符 1//左移运算符\u0026lt;\u0026lt;语法： 2value \u0026lt;\u0026lt; shift //value是被操作的整数值，shift是要移动的位数 3//功能：左移一位相当于乘2，左移n位相当于乘以2的n次方 4//左移运算符在汇编语言中直接修改寄存器的内容，但是C++生成一个新值，如： 5int x=30; 6int y= x\u0026lt;\u0026lt;3; 7// 8x=x\u0026lt;\u0026lt;4; 9y\u0026lt;\u0026lt;=2; 1//右移运算符\u0026lt;\u0026lt;语法： 2value \u0026gt;\u0026gt; shift //value是被操作的整数值，shift是要移动的位数 3//功能：左移一位相当于除以2，左移n位相当于除以2的n次方，如： 4int x=4; 5x\u0026gt;\u0026gt;1; 6x\u0026gt;\u0026gt;=1; 逻辑按位运算符\n1//按位非 ~ 2//先将数写成二进制形式，再将每个0化为1， 3//功能：新值是原值的补位，如 4unsigned char x=3; 5十进制中~3=252， 1//按位 OR(|)对两个整数进行操作，生成一个新的整数值。 2//将数写成二进制形式，对应位“见1为1” 3//可以组合赋值运算符，如 4a |= b; 1//按位 XOR(^)将两个数结合起来，生成一个新的整数值。 2//将数写成二进制形式，对应位“不同为1，相同为0” 3//可以组合赋值运算符，如 4a ^= b; 异或性质：\n（1）交换律：A ⊕ B = B ⊕ A （2）结合律：A ⊕ (B ⊕ C) = (A ⊕ B) ⊕ C （3）自反：A ⊕ B ⊕ B = A ⊕ 0 = A\n异或的应用：\n（1）快速比较两个值 判断两个int数字a，b是否相等a ^ b == 0则a,b相等。\n（2）在汇编语言中经常用于将变量置零：xor a，a；\n（3）我们可以使用异或来使某些特定的位翻转，因为不管是0或者是1与1做异或将得到原值的相反值；\n10 ^ 1 = 1 2 31 ^ 1 = 0 （4）我们使用异或来判断一个二进制数中1的数量是奇数还是偶数\n 例如：求10100001中1的数量是奇数还是偶数； 答案：1 ^ 0 ^ 1 ^ 0 ^ 0 ^ 0 ^ 0 ^ 1 = 1,结果为1就是奇数个1，结果为0就是偶数个1； 应用：这条性质可用于奇偶校验（Parity Check），比如在串口通信过程中，每个字节的数据都计算一个校验位，数据和校验位一起发送出去，这样接收方可以根据校验位粗略地判断接收到的数据是否有误\n （5）校验和恢复\n 校验和恢复主要利用的了异或的特性：IF a ^ b = c THEN a ^ c = b 应用：一个很好的应用实例是RAID5，使用3块磁盘（A、B、C）组成RAID5阵列，当用户写数据时，将数据分成两部分，分别写到磁盘A和磁盘B，A ^ B的结果写到磁盘C；当读取A的数据时，通过B ^ C可以对A的数据做校验，当A盘出错时，通过B ^ C也可以恢复A盘的数据。\n （6）经典题目：不使用其他空间，交换两个值\n1a = a ^ b; 2b = a ^ b; //a ^ b ^ b = a ^ 0 = a; 3a = a ^ b; （7）面试题：互换二进制数的奇偶位； 以上性质来自金马的Blog 1//按位 AND(\u0026amp;)将两个数结合起来，生成一个新的整数值。 2//将数写成二进制形式，对应位“同为1结果才为1” 3//可以组合赋值运算符，如 4a \u0026amp;= b; 5 6a \u0026amp; 1//取a二进制的最低位，判断和1是否相同，相同返回1，否则返回0，可用于判断奇偶 ","date":"Oct 3, 2019","img":"/images/bg/computerp.png","permalink":"/series/math/bit-calc/","series":["Math"],"tags":["Math"],"title":"位运算的数学等价"},{"categories":[],"content":"Python GC ##Python 垃圾回收原理\n对象 Python所谓的“一切皆对象”，实际上说的是： python有一个Common Object Structures通用对象结构的东西，所有在内存中是PyObject和PyVarObject类型的，都会共享少量字段，如引用计数和指向相应类型对象的指针。\n PyObject 此类型扩展出了所有的Python对象。它包含引用计数和指向相应类型对象的指针 PyVarObject 是对PyObject类型的扩展。添加了ob_size属性，并且仅用于具有length概念的对象  引用计数ob_refcnt原理\n 当为对象分配了新名称，将对象作为参数传递给函数，或将其放置在诸如元组或字典的数据结构中，引用计数会增加 当重新分配对对象的引用，对象的引用超出范围或删除对象时，引用计数也会减少  1# 可以通过 sys 模块中下面的方法获取参数的引用计数 2sys.getrefcount(a) 内存：  是一个堆 包含程序中使用的对象和其他数据结构 内存堆空间的分配和取消分配是通过Python内存管理器使用API​​函数管理的。 和其他语言不同，Python不一定会把内存释放回操作系统 Python解释器为小于512字节的对象提供了专用的对象分配器，从而保留了一些已分配的内存块，以备使用  对内存需做更深的研究\n垃圾回收 python释放不再使用的内存，这项工作就称为垃圾回收。\n何时回收：\n 当引用计数为0  1引用计数的优点是原理简单、将消耗均摊到运行时；缺点是无法处理循环引用  三代垃圾收集器(目前只有三代)中的每一代都有一个阈值和一个计数器。计数器值为上次GC后对象分配数量-释放数量。当计数器超过该阈值，则触发这一代GC。内存释放过后仍存在的对象，将会移植到更老的一代。  1分代回收可以处理引用计数无法处理的情况：循环引用，但是无法处理循环引用中的对象定义了__del__的情况 2分代回收并不是实时工作，而是定期运行，每次回收会造成一定的卡顿 3老一代的回收频率比新一代的低，而且新一代的回收更多。 循环引用示例：\n1\u0026gt;\u0026gt;\u0026gt; from ctypes import * 2\u0026gt;\u0026gt;\u0026gt; class ObjRnt(Structure): 3... _fields_ = [(\u0026#39;refcnt\u0026#39;,c_int)] 4... 5\u0026gt;\u0026gt;\u0026gt; l = [] 6\u0026gt;\u0026gt;\u0026gt; l.append(l) 7\u0026gt;\u0026gt;\u0026gt; l_address = id(l) 8\u0026gt;\u0026gt;\u0026gt; del(l) 9\u0026gt;\u0026gt;\u0026gt; ObjRnt.from_address(l_address).refcnt 101 可以看出，如果del对象后，lst不可再被 Python 内部访问了，但是他的地址上来看，他的循环引用计数并不是0。更详细的Debug方法可以往下看\n如果没有禁用垃圾回收，那么Python中的内存泄露有两种情况：\n1要么是对象被生命周期更长的对象所引用，比如global作用域对象； 2要么是循环引用中存在__del__； 垃圾回收比较耗性能，解除循环引用，就可以禁用垃圾回收。解除循环引用的办法：\n 手动解除 使用weakref(弱引用)  wakref py3.6 传统的 GC 比如标记-清除或停止-复制的工作机制如下：\n 1.找出系统的根对象。包含全局环境（例如Python中的__main__模块）和堆栈上的对象 2.从这些对象中搜索并找到所有可到达的对象。找到的对象都是“活着的” 3.释放所有其他对象  其存在的问题很明显：与其说访问所有可以访问，并且“活着的”对象，不如尝试查找不可访问的对象。\n所以，GC 的算法原理是这样的： 因为只有容器对象（如list，dict，class等；int，str不是容器对象）可能存在循环引用的情况。所以，我们只跟踪所有容器对象。具体来说使用了doubly linked lists的数据结构。\n 1.对容器对象添加了gc_refs字段和两个链接指针 2.将每一个容器对象的gc_refs设置为等于该对象的引用计数 3.找到每一个容器对象它所引用的容器对象，并减少所引用容器的gc_refs字段。 4.所有具有gc_refs字段大于1的容器对象，这些对象被外部容器对象集所引用，并且无法被释放，于是我们将这些对象移动到另一个集合 5.我们要释放的对象是，保留在原始集中的对象，而且仅由该集中的对象引用（即，它们无法从Python访问并且是垃圾）  算法的开销\n 最大的成本之一是每个容器对象需要三个额外的内存（上面原理中1.） 其次容器对象集的维护也是一个开销  Debug memory leaks gc 模块主要提供了禁用收集器，调整收集频率以及设置调试选项的功能，对收集器找到但无法释放的无法访问对象的访问。 objgraph 模块可以用于定位内存泄漏\ngc（garbage collector）是Python 标准库。功能：\n可以开关gc、调整垃圾回收的频率、输出调试信息。gc模块是很多其他模块（比如objgraph）封装的基础。核心API：\n gc.enable() 开启gc（默认情况下是开启的）;gc.disable() 关闭gc;gc.isenabled() 判断gc是否开启; gc.collect() 执行一次垃圾回收，不管gc是否处于开启状态都能使用 gc.set_threshold(th0[, th1[, th2]]) 设置垃圾回收阈值;gc.get_threshold() 获得当前的垃圾回收阈值 gc.get_objects()返回所有被垃圾回收器（collector）管理的对象。只要python解释器运行起来，就有大量的对象被collector管理，因此，该函数的调用比较耗时！ gc.set_debug(flags) 设置调试选项 flags参数根据python版本有很大差异  gc.garbage 返回 unreachable 的 could not be freed (uncollectable 对象)  ","date":"Aug 3, 2019","img":"/images/bg/ang.jpeg","permalink":"/series/python/python-gc/","series":["Python"],"tags":["Python3","GC","Algorithm"],"title":"Python GC"},{"categories":null,"content":"Road of soul  观察，思考，总结，实践。\n 通常来说，愈稀奇的事，真相大白后，内情愈平常。\n生活是很枯燥的。我的一生就是力求不要在平庸中虚度光阴。\n对于一个伟大人物来说，任何事物都不是微不足道的。\n我相信友谊，并且愿意首先表示出我的友谊。\n社会上常常会有突如其来的侮辱，那是必须忍受的。\n伟大的人不是生下来就伟大的，而是在成长过程中显示其伟大的。\n过去的事就过去了，永远别回头，无论是为了找借口、为自己辩解还是找乐子，永远都不要回头。你现在是什么人，就是什么人，世界眼下是什么样，就是什么样。\n100%  记录所思所想\n   人的主观情绪会深刻的影响学习的质量和效率，所以，尽量保持绝对的冷静也许是快速成长的不二法门。\n  信奉，祷告，祈福\u0026hellip;也许都是告诫自己虔诚面对自己的内心的一些途径。 - 周四，阴\n  有些道理到了年龄才有可能懂，有些道理过了年龄不会再懂了。 - 周二，阴\n  努力就好，结果总会不差的；就算是暂时的水逆，耐心点，等待转机。 - 20 周三，晴\n  每个系统中存在一个最基本的命题，它不能被违背或删除。 - 21 周三，上海的冬日，微风徐徐\n  一路风雨，满城秋，凛冬散尽，水春流。 - 12月，深夜\n  ","date":"Feb 28, 2019","img":"","permalink":"/about/","series":null,"tags":null,"title":"About"},{"categories":[],"content":"pythonchallenge  游戏入口 http://www.pythonchallenge.com/ 挺好玩的解密小游戏，会上瘾\n 第零关  Hint: try to change the URL address.\n 12**38 = 274877906944 1http://www.pythonchallenge.com/pc/def/274877906944.html 第一关  everybody thinks twice before solving this. g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr\u0026rsquo;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.\n 看图：每个字符ASCII+2\n1\u0026gt;\u0026gt;\u0026gt; for i in list(s): 2... if ord(i)\u0026gt;=97 and ord(i)\u0026lt;=122: 3... i = chr(ord(i)+2) 4... if ord(i)\u0026gt;122: 5... i = chr(97+(ord(i)-122)) 6... ans += i 7... 8\u0026#34;i hope you didnt translate it by hand. thats what computers are for. doing it in by hand is inefficient and that\u0026#39;s why this text is so long. using string.maketrans() is recommended. now apply on the url.\u0026#34; 查了string.maketrans()用法后(人工也成)把url中的map -\u0026gt; orc 就行了\n1\u0026gt;\u0026gt;\u0026gt;from string import maketrans 2\u0026gt;\u0026gt;\u0026gt;ori = \u0026#34;g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr\u0026#39;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.\u0026#34; 3\u0026gt;\u0026gt;\u0026gt;aft = \u0026#34;i hope you didnt translate it by hand. thats what computers are for. doing it in by hand is inefficient and that\u0026#39;s why this text is so long. using string.maketrans() is recommended. now apply on the url.\u0026#34; 4\u0026gt;\u0026gt;\u0026gt; transtab = maketrans(ori,aft) 5\u0026gt;\u0026gt;\u0026gt; url.translate(transtab) 6\u0026#39;httr://yyy.rathopehcnngpig.eoo/re/fgh/ocr.hton\u0026#39; 7 8#so:url = http://www.pythonchallenge.com/pc/def/ocr.html 第二关  recognize the characters. maybe they are in the book, but MAYBE they are in the page source.\n 是要看页面的源码!?。。 源码中找到了：\n1\u0026lt;!-- 2find rare characters in the mess below: 3--\u0026gt; 4.... 5#很长，count()后发现有几个是字母。先复制给参数html 6for i in html: 7... se.add(i) 8... 9 10\u0026gt;\u0026gt;\u0026gt; se 11set([\u0026#39;!\u0026#39;, \u0026#39;#\u0026#39;, \u0026#39;%\u0026#39;, \u0026#39;$\u0026#39;, \u0026#39;\u0026amp;\u0026#39;, \u0026#39;)\u0026#39;, \u0026#39;(\u0026#39;, \u0026#39;+\u0026#39;, \u0026#39;*\u0026#39;, \u0026#39;@\u0026#39;, \u0026#39;[\u0026#39;, \u0026#39;]\u0026#39;, \u0026#39;_\u0026#39;, \u0026#39;^\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;q\u0026#39;, \u0026#39;u\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;y\u0026#39;, \u0026#39;{\u0026#39;, \u0026#39;}\u0026#39;]) 12\u0026gt;\u0026gt;\u0026gt; for i in list(se): 13... print i,html.count(i) 14... 15! 6079 16# 6115 17% 6104 18$ 6046 19\u0026amp; 6043 20) 6186 21( 6154 22+ 6066 23* 6034 24@ 6157 25[ 6108 26] 6152 27_ 6112 28^ 6030 29a 1 30e 1 31i 1 32l 1 33q 1 34u 1 35t 1 36y 1 37{ 6046 38} 6105 39#字母都是1，这也验证了Hit 40其实知道是字母了直接re.findall(\u0026#39;[a-z]\u0026#39;,html)就成。题的真实用意？ 41#so:http://www.pythonchallenge.com/pc/def/equality.html 第三关  One small letter, surrounded by EXACTLY three big bodyguards on each of its sides.\n 1\u0026gt;\u0026gt;\u0026gt; ans = abcdefghijklmnopqrstuvwxyz 2\u0026gt;\u0026gt;\u0026gt; import requests 3\u0026gt;\u0026gt;\u0026gt; for i in ans: 4... r = requests.get(\u0026#39;http://www.pythonchallenge.com/pc/def/{}.html\u0026#39;.format(i)) 5... print r.content 6... 到 l 时候：yes. but there are more. 试到y时候：It really looks like a Y, isn't it? now, go back. 好吧。。还是看页面源码去吧 : ) 开始以为是要处理字符串abc...z 和题2类似直接正则\n1ans = re.findall(\u0026#39;[a-z][A-Z]{3}([a-z])[A-Z]{3}[a-z]\u0026#39;,html) 2\u0026gt;\u0026gt;\u0026gt; for i in ans: 3... a+=i 4... 5\u0026gt;\u0026gt;\u0026gt; a 6\u0026#39;linkedlist\u0026#39; 7#so:http://www.pythonchallenge.com/pc/def/linkedlist.html 8#then 他有提示... 9#so:http://www.pythonchallenge.com/pc/def/linkedlist.php 第四关：只有图.. 只能将源码中的这句话作为Hit：\n urllib may help. DON\u0026rsquo;T TRY ALL NOTHINGS, since it will never end. 400 times is more than enough.\n 在一家大数据公司实习一个月了：所以看页面源码还是能看懂的✧(≖ ◡ ≖✿)嘿嘿 发现了href=\u0026quot;linkedlist.php?nothing=12345\u0026quot; 和源码中的NOTHING正好对应那就访问呗。。他让用urllib，我习惯用requests..\n1url = \u0026#39;http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing={}\u0026#39; 2def get_data(i,u): 3 r = requests.get(url.format(u)) 4 resp = r.content 5 nothing = re.findall(\u0026#39;\\d+\u0026#39;,resp)[0] 6 print i,\u0026#39; nothing : \u0026#39;,nothing 7 print resp 8 return nothing 9 10if __name__ == \u0026#39;__main__\u0026#39;: 11 s = time.time() 12 nothing = \u0026#39;12345\u0026#39; 13 for i in xrange(400): 14 nothing = get_data(i+1,nothing) 15 print time.time() - s 16 跑到and the next nothing is 16044出了问题：Yes. Divide by two and keep going. 人工改下接着跑呗 ：）\u0026hellip; 好吧他真是怕你寂寞才设置这么多问题\u0026hellip;\n1#82683 2There maybe misleading numbers in the 3text. One example is 82683. Look only for the next nothing and the next nothing is 63579 4#改：nothing = re.findall(\u0026#39;\\d+\u0026#39;,resp)[-1] 1#66831出了结果 2#so:http://www.pythonchallenge.com/pc/def/peak.html 第五关：  pronounce it source page: peak hell sounds familiar ?\n 英语一般很吃力啊，还发音？匹克好？皮卡哦？ \u0026hellip;去看文档https://docs.python.org/2/library/index.html peak搜无果pick搜搜倒有点意思了。。\n1 2\u0026gt;\u0026gt;\u0026gt; a = pickle.dumps(\u0026#39;peak\u0026#39;) 3\u0026gt;\u0026gt;\u0026gt; print a 4S\u0026#39;peak\u0026#39; 5p0 6. 不对，又是忽略了什么。。\n1\u0026lt;peakhell src=\u0026#34;banner.p\u0026#34;\u0026gt; 2\u0026lt;!-- peak hell sounds familiar ? --\u0026gt; 3\u0026lt;/peakhell\u0026gt; 4#忽略了http://www.pythonchallenge.com/pc/def/banner.p 5#mmp,loads后还是不知所措 :) 6#似乎要排个序输出？不对，，每个小列表中的元组个数不一。。 随手写代码试试。。。\n1\u0026gt;\u0026gt;\u0026gt; final = \u0026#39;\u0026#39; 2\u0026gt;\u0026gt;\u0026gt; for i in data: 3... for ii in i: 4... for iii in range(ii[1]): 5... final+=ii[0] 6... 7\u0026gt;\u0026gt;\u0026gt; final 十分有趣✧(≖ ◡ ≖✿)嘿嘿\n1# so:http://www.pythonchallenge.com/pc/def/channel.html 第六关： 以后要把源码都分析好在往下分析。。\n !\u0026ndash; \u0026lt;\u0026ndash; zip \u0026ndash;\u0026gt; now there are pairs\n!\u0026ndash; The following has nothing to do with the riddle itself. I just thought it would be the right point to offer you to donate to the Python Challenge project. Any amount will be greatly appreciated. -thesamet \u0026ndash;\u0026gt; ！ - 以下与谜语本身无关。 我只是给你捐赠的正确点 \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;mmp\n 信息不足。。看看cookie:\n info: you+should+have+followed+busynothing\u0026hellip; 没用，，只好想想zip和图片了 十分有趣✧(≖ ◡ ≖✿)嘿 http://www.pythonchallenge.com/pc/def/channel.zip\n 查了查要打开.zip用到 zipfile（人工点开也成。。）\n1class zipfile.ZipFile(file[, mode[, compression[, allowZip64]]]) 2ZipFile.namelist() 3\t获取zip文档内所有文件的名称列表。 4ZipFile.open(name[, mode[, pwd]]) 5#这些方法就够了 6ZipFile.getinfo(name) 7　获取zip文档内指定文件的信息。返回一个zipfile.ZipInfo对象，它包括文件的详细信息 8ZipFile.infolist() 9\t获取zip文档内所有文件的信息，返回一个zipfile.ZipInfo的列表。 10ZipFile.printdir() 11\t将zip文档内的信息打印到控制台上。 12文档: 13#https://docs.python.org/2/library/zipfile.html#zipfile.ZipFile.getinfo 1def process_num_6(): 2 with zipfile.ZipFile(\u0026#39;channel.zip\u0026#39;,\u0026#39;r\u0026#39;) as f: 3 file_content = f.namelist() 4 c = f.open(\u0026#39;readme.txt\u0026#39;,\u0026#39;r\u0026#39;) 5 content = c.readlines()[2][6:] 6 print content 7 while re.findall(\u0026#39;(\\d+)\u0026#39;,content): 8 num = re.findall(\u0026#39;(\\d+)\u0026#39;,content)[0] 9 content = \u0026#39;{}.txt\u0026#39;.format(num) 10 c = f.open(content,\u0026#39;r\u0026#39;) 11 content = c.readlines()[0] 12 print num,content 13#46145 Collect the comments. 14#改代码 15def process_num_6(): 16 with zipfile.ZipFile(\u0026#39;channel.zip\u0026#39;,\u0026#39;r\u0026#39;) as f: 17 final = \u0026#39;\u0026#39; 18 file_content = f.namelist() 19 c = f.open(\u0026#39;readme.txt\u0026#39;,\u0026#39;r\u0026#39;) 20 content = c.readlines()[2][6:] 21 print content 22 while re.findall(\u0026#39;(\\d+)\u0026#39;,content): 23 num = re.findall(\u0026#39;(\\d+)\u0026#39;,content)[0] 24 content = \u0026#39;{}.txt\u0026#39;.format(num) 25 ff = f.getinfo(content) 26 c = f.open(content,\u0026#39;r\u0026#39;) 27 content = c.readlines()[0] 28 print num,content,ff.comment 29 final+=ff.comment 30 print final 31#it\u0026#39;s in the air. look at the letters. 32#十分有趣✧(≖ ◡ ≖✿)嘿嘿 1# so:http://www.pythonchallenge.com/pc/def/oxygen.html 第七关： 这次真的只有图片了。。。.png的图片\ngoogle了‘python怎么读写png图片中隐藏数据’ 出现了连接类似这样的‘python读取图片中B通道隐藏数据’ 所以解题方向应该就是这个了\n1#用的应该是The Image Module 2#http://effbot.org/imagingbook/image.htm 3def process_num_7(): 4 from PIL import Image 5 im = Image.open(\u0026#39;oxygen.png\u0026#39;) 6 pixdata=im.load() 7 result=[] 8 for y in xrange(43,52):#根据需要修改y范围 9 for x in xrange(0,608):#根据需要修改x范围 10 data=pixdata[x,y][2] 11 result.append(chr(data)) 12 print \u0026#39;\u0026#39;.join(result) 13#结果输出的好像有些问题但能看懂 14\u0026#39;\u0026#39;\u0026#39; 15sssssmmmmmmmaaaaaaarrrrrrrttttttt ggggggguuuuuuuyyyyyyy,,,,,,, yyyyyyyooooooouuuuuuu mmmmmmmaaaaaaadddddddeeeeeee iiiiiiittttttt....... ttttttthhhhhhheeeeeee nnnnnnneeeeeeexxxxxxxttttttt llllllleeeeeeevvvvvvveeeeeeelllllll iiiiiiisssssss ÆÆÆÆÆÆÆ111111100000005555555,,,,,,, 111111111111110000000,,,,,,, 111111111111116666666,,,,,,, 111111100000001111111,,,,,,, 111111100000003333333,,,,,,, 111111111111114444444,,,,,,, 111111100000005555555,,,,,,, 111111111111116666666,,,,,,, 111111122222221111111 16\u0026#39;\u0026#39;\u0026#39; 17s = [105,110,116,101,103,114,105,116,121] 18\u0026gt;\u0026gt;\u0026gt; ans = \u0026#39;\u0026#39; 19\u0026gt;\u0026gt;\u0026gt; for i in s: 20... ans+=chr(i) 21... 22\u0026gt;\u0026gt;\u0026gt; ans 23\u0026#39;integrity\u0026#39; ✧(≖ ◡ ≖✿)嘿嘿，图像处理挺有意思\n1# so:http://www.pythonchallenge.com/pc/def/integrity.html 第八关：  Where is the missing link? 图中蜜蜂有鬼。。。有密码。。\n 1un: \u0026#39;BZh91AY\u0026amp;SYA\\xaf\\x82\\r\\x00\\x00\\x01\\x01\\x80\\x02\\xc0\\x02\\x00\\x00!\\x9ah3M\\x07\u0026lt;]\\xc9\\x14\\xe1BA\\x06\\xbe\\x084\u0026#39; 2pw: \u0026#39;BZh91AY\u0026amp;SY\\x94$|\\x0e\\x00\\x00\\x00\\x81\\x00\\x03$ \\x00!\\x9ah3M\\x13\u0026lt;]\\xc9\\x14\\xe1BBP\\x91\\xf08\u0026#39; 编码问题？查了很多资料。。。\n1#https://docs.python.org/2/library/bz2.html?highlight=bz2#module-bz2 2\u0026gt;\u0026gt;\u0026gt; import bz2 3\u0026gt;\u0026gt;\u0026gt; print(bz2.decompress(us).decode(\u0026#39;utf-8\u0026#39;)) 4huge 5\u0026gt;\u0026gt;\u0026gt; print(bz2.decompress(ps).decode(\u0026#39;utf-8\u0026#39;)) 6file 1# so:http://www.pythonchallenge.com/pc/return/good.html 第九关：connect the dots 好多图像处理，先学一波：\n1http://pillow.readthedocs.io/en/3.4.x/reference/Image.html 2http://pythonguidecn.readthedocs.io/zh/latest/scenarios/imaging.html 连接点画图，first,second应该是坐标。。 用到的方法：\n1#http://effbot.org/imagingbook/image.htm#tag-Image.new 2#http://pillow.readthedocs.io/en/3.4.x/reference/ImageDraw.html#imagedraw-module 1def process_num_9(): 2 from PIL import Image,ImageDraw 3 first = [146, 399, 163, , ] 4 second = [156, 141, 165, , ] 5 im = Image.new(\u0026#34;RGB\u0026#34;, (512, 512)) #开始把color设为\u0026#39;white\u0026#39;，结果一片白。 6 draw = ImageDraw.Draw(im) 7 draw.line(zip(first[0::2], first[1::2])) 8 draw.line(zip(second[0::2], second[1::2])) 9 im.show() 10#运行结果是个牛的图像。。cow? 11#hmm. it\u0026#39;s a male.。。。。。。公牛英语怎么说 1# so:http://www.pythonchallenge.com/pc/return/bull.html 第十关：what are you looking at?  先找clue href=\u0026ldquo;sequence.txt\u0026rdquo; len(a[30]) = ?\n 1#http://www.pythonchallenge.com/pc/return/sequence.txt 2a = [1, 11, 21, 1211, 111221, 3#后来发现，点图里的牛也成，和蜜蜂那关一样 看起来很简单？！\n1把2拆了： 2a[1,11,111,11111,11111111,,] 3#其实就是各个位上的数求和 41，2，3，5，8,,似乎有规律,不过是错的。。 5想破头皮了~~ 6知道什么是**外观数列**么 7https://zh.wikipedia.org/wiki/%E5%A4%96%E8%A7%80%E6%95%B8%E5%88%97 8先试试暴力。。。有反爬策略，，还是研究数列去吧 1#根据wiki上外观数列的性质 2def process_num_10(): 3 a=[\u0026#39;11\u0026#39;,] 4 for i in range(30): 5 node = \u0026#39;\u0026#39; 6 now = a[i] 7 num = 1 8 for k in range(1,len(now)): 9 if now[k-1]!=now[k]: 10 node += str(num)+ now[k-1] 11 num=1 12 else: 13 num+=1 14 node += str(num)+now[-1] 15 a.append(node) 16 print a 17 print len(a[29]) 1# so:http://www.pythonchallenge.com/pc/return/5808.html 第十一关：odd even 这模糊的感觉，难道又是图像处理？\n 线索很少 odd even 奇偶 cave 洞穴\n 通过把奇数，偶数把坐标分成两份分别生成图像，结果一片黑，还是对图像处理不是特别理解。 多次尝试。。。 正确的如下：\n1def process_num_11(): 2 from PIL import Image, ImageDraw 3 im = Image.open( \u0026#39;cave.jpg\u0026#39; ) 4 im1 = Image.new(\u0026#34;RGB\u0026#34;, (640, 480)) 5 pixdata = im.load() 6 for i in xrange(640): 7 for j in xrange(480): 8 if (i+j) %2== 0: 9 im1.putpixel((i,j),pixdata[i,j]) 10 else: 11 im1.putpixel((i,j),0) 12 im1.show() 1# so:http://www.pythonchallenge.com/pc/return/evil.html 第十二关：dealing evil  处理恶魔？ 又是图像问题，满满的都是恶意 似乎这个游戏几乎图像问题。\n hah\u0026hellip;既然有evil1那么就有evil2，3，4\u0026hellip;就2有用。\n1#not jpg - gfx 2#http://www.pythonchallenge.com/pc/return/evil2.gfx 3#curl -u huge:file http://www.pythonchallenge.com/pc/return/evil4.jpg #或者直接去查看响应 4#response: Bert is evil! go back! 可是还是不会，，第一次听说.gfx文件\nnote:实习生活告一段落，开始玩游戏。\n1google: What is a GFX file? 2 3Animation file used by video games, such as Batman: Arkham Asylum and Mass Effect; similar to the .SWF file format; contains vector and raster graphics; also may include ActionScript interactive actions. 4视频游戏使用的动画文件，如蝙蝠侠：阿卡姆庇护和质量效应; 类似于.SWF文件格式; 包含矢量和光栅图形; 也可能包含ActionScript交互式动作。 5 6google: how to open.gfx file in python 7found-- http://www.swftools.org/gfx_tutorial.html 8 9似乎和gfx模块没多大关系。。 10 11---好难~~ 1直接打开文件试试吧 2用sublime时候直接编译提示：[Decode error - output not utf-8] 3去shell看看： 4\u0026gt;\u0026gt;\u0026gt;doc2 = open(\u0026#34;/Users/mioji/Desktop/evil2.gfx\u0026#34;, \u0026#34;rb\u0026#34;).read() 5\u0026gt;\u0026gt;\u0026gt;doc2 6输出一坨：\u0026#39;\\xff\\x89G\\x89\\xff\\xd8PIP\\xd8\\xffNFN\\xff\\xe0G8G\\xe0\\x00\\r7\\r\\x00\\x10\\na\\n\\x10J\\x1a@\\x1aJF\\n\\x01\\nFI\\x00\\xf0\\x00IF\\x00\\x00\\x00F\\x00\\x00\\xe7\\x00\\x00\\x01\\r\\x00\\r\\x01\\x01I\\x00I\\x01\\x01H\\x00H\\x01\\x00D\\x01D\\x00\\xb4R\\x00R\\xb4\\x00\\x00\\x00\\x00\\x00\\xb4\\x00\\x01\\x00\\xb4\\x00\\x01\\x04\\x01\\x00\\x00\\x90\\x02@\\x00\\xff\\x00\\x00\\x00\\xff\\xe1\\x00\\x05\\x00\\xe1\\x08\\x01\\x00\\x00\\x0b\\xa4,\\x02\\xf0\\xdfE\\x08\\x00\\x08Ex\\x02\\x06\\x02xi\\x00\\x00\\x00if\\x00\\x00\\x00f\\x00\\x00\\x04\\x00\\x00\\x00b\\x00\\xfe\\x00M\\xd5\\x06OMMr\\x00*M\\x00\\x95\\x01\u0026lt;\\x00*\\x00\\x0e\\x00*\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x06\\x06\\t\\x00\\x08b\\x01p\\x08\\x00K\\x04H\\x00\\x00G\\x00Y\\x00\\x00D\\x00s\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x07\\x00\\x00\\x0e\\x00\\x05\\x1b\\x0e\\x00\\x00\\x02\\xaf\\x00\\x02\\x00\\x07.......\u0026#39; 7\u0026gt;\u0026gt;\u0026gt; doc2.count(\u0026#39;\\n\u0026#39;) 8232 9\u0026gt;\u0026gt;\u0026gt; len(doc2) 1067575 11---忍不住看了答案：是要轮流分五份，就像第一张图片分牌一样。（MD） 12剩下就简单了。。回过头来看好像很简单。。。不过刚接触以为还要用到什么新模块呢。无头苍蝇乱撞╮(╯▽╰)╭ 13def process_num_12(): 14 doc2 = open(\u0026#34;/Users/mioji/Desktop/evil2.gfx\u0026#34;, \u0026#34;rb\u0026#34;).read() 15 for i in range(5): 16 with open(\u0026#39;evil%s\u0026#39;%(str(i)),\u0026#39;wb\u0026#39;) as f: 17 f.write(doc2[i::5]) 1dis pro port ...我这边就显示上面一半 ity(被划掉了)，算了去google翻译吧 Did you mean: disproportionate ,试了又试 2#so: disproportional 3http://www.pythonchallenge.com/pc/return/disproportional.html 第十三关：call him phone that evil 看到这，瞬间想到12关的那个Bert is evil! go back! 不会这么容易吧。。。2378不对。。 难道国外电话要加#号？试了下加前面有用，#2378\n1don\u0026#39;t look here 2--至少不是404，后来发现。单独一个“#”返回也是这个信息。。。唉 1剩下就这一个线索了，还打不开。。 2http://www.pythonchallenge.com/pc/phonebook.php 3还有一个就是源码中： 4phone that \u0026lt;remote /\u0026gt; evil 5remote call? WTF-_- 6google：python remote call --还真有 7pip install rpyc and help(rpyc) 学吧，，MD好像不是这个模块。。 8 9找了半天，不可避免的瞥到了答案：是用到xmlrpclib模块。看文档学习吧https://docs.python.org/2/library/xmlrpclib.html#xmlrpclib.ServerProxy 10知道模块了就简单了-----早点给个提示多好 1\u0026gt;\u0026gt;\u0026gt;import xmlrpclib 2\u0026gt;\u0026gt;\u0026gt;r = xmlrpclib.ServerProxy(\u0026#39;http://www.pythonchallenge.com/pc/phonebook.php\u0026#39;) 3\u0026gt;\u0026gt;\u0026gt; type(r) 4\u0026lt;type \u0026#39;instance\u0026#39;\u0026gt; 5\u0026gt;\u0026gt;\u0026gt; r.system.listMethods() 6[\u0026#39;phone\u0026#39;, \u0026#39;system.listMethods\u0026#39;, \u0026#39;system.methodHelp\u0026#39;, \u0026#39;system.methodSignature\u0026#39;, \u0026#39;system.multicall\u0026#39;, \u0026#39;system.getCapabilities\u0026#39;] 7\u0026gt;\u0026gt;\u0026gt; r.system.methodSignature(\u0026#39;phone\u0026#39;) 8[[\u0026#39;string\u0026#39;, \u0026#39;string\u0026#39;]] 9\u0026gt;\u0026gt;\u0026gt; r.system.methodHelp(\u0026#39;phone\u0026#39;) 10\u0026#39;Returns the phone of a person\u0026#39; 11\u0026gt;\u0026gt;\u0026gt; r.phone(\u0026#39;bert\u0026#39;) 12\u0026#39;He is not the evil\u0026#39; 13\u0026gt;\u0026gt;\u0026gt; r.phone(\u0026#39;Bert\u0026#39;) 14\u0026#39;555-ITALY\u0026#39; 15 16---这一步一步的跟着提示走，唉。根据文档就学了俩方法，列出方法和Help。原理还不是太明吧，反正有答案了。事实上他列出的方法我都试了，我这里就展示有意义的线索。 17 18http://www.pythonchallenge.com/pc/return/ITALY.html 19SMALL letters. 20#so:http://www.pythonchallenge.com/pc/return/italy.html 第十四关：walk around 1应该是处理大便下面那个图片吧，O__O …那是面包。 2http://www.pythonchallenge.com/pc/return/wire.png 3源码中找到了提示：remember: 100*100 = (100+99+99+98) + (... 4而图片正好是100*100的。试试吧。 5 6MD,单单这个公式推了半天，最终试出来，实验过程如下： 7\u0026gt;\u0026gt;\u0026gt; sum = 0 8\u0026gt;\u0026gt;\u0026gt; num = 99 9\u0026gt;\u0026gt;\u0026gt; for i in range(100): 10... sum+= num*4 11... num -= 2 12... print sum 13会输出很多，似乎到i= 49时候就等于10000了。 14所以推测公式为：100*100 = (100+99+99+98)+ (98+97+97+96)+(96+95+95+94)+... 1下面才是正题--处理图像 2\u0026gt;\u0026gt;\u0026gt; from PIL import Image, ImageDraw 3\u0026gt;\u0026gt;\u0026gt; im = array(Image.open(\u0026#39;/Users/mioji/Desktop/wire.png\u0026#39;)) 4\u0026gt;\u0026gt;\u0026gt; print len(im[0]) 510000 6 7#做实验时候还在纳闷：原来这个图像是10000*1的，所以图像下载下来是个长条。。。 8#所以说公式没什么用- -WTF。 9 10\u0026gt;\u0026gt;\u0026gt; for i in range(100): 11... for j in range(100): 12... im1[i][j]=im[0][num] 13... num-=1 14... 15\u0026gt;\u0026gt;\u0026gt; imshow(im1) 16\u0026lt;matplotlib.image.AxesImage object at 0x109040250\u0026gt; 17\u0026gt;\u0026gt;\u0026gt; show() 展示的图像。bit?什么鬼。 1试了一下 2#http://www.pythonchallenge.com/pc/return/bit.html 3you took the wrong curve. 4可能那个公式还是有用的。。 5不不不，突然意识到那个大便有提示作用。。一圈一圈的。。 6O__O \u0026#34;…拙劣的代码写了个蛇形数组(而且还有Bug)。不提出来献丑了所有代码我都保存在github上，等通关了我放到最后，虽然那是一个漫长的时间。 不过能看清是只猫，其他都是细节✧(≖ ◡ ≖✿)嘿嘿\n1# so:http://www.pythonchallenge.com/pc/return/cat.html ","date":"Jan 3, 2019","img":"/images/bg/computerp.png","permalink":"/series/python/pychallenge/","series":["Python"],"tags":["Python3","Picture","Web"],"title":"Python Challenges"},{"categories":null,"content":"The base of the Linux/Unix file system hierarchy begins at the root and everything starts with the root directory.\nThese are the common top-level directories associated with the root directory: /bin – binary or executable programs. /etc – system configuration files. /home – home directory. It is the default current directory. /opt – optional or third-party software. /tmp – temporary space, typically cleared on reboot. /usr – User related programs. /var – log files. Some other directories in the Linux system: /boot- It contains all the boot-related information files and folders such as conf, grub, etc. /dev – It is the location of the device files such as dev/sda1, dev/sda2, etc. /lib – It contains kernel modules and a shared library. /lost+found – It is used to find recovered bits of corrupted files. /media – It contains subdirectories where removal media devices inserted. /mnt – It contains temporary mount directories for mounting the file system. /proc – It is a virtual and pseudo-file system to contains info about the running processes with a specific process ID or PID. /run – It stores volatile runtime data. /sbin – binary executable programs for an administrator. /srv – It contains server-specific and server-related files. /sys – It is a virtual filesystem for modern Linux distributions to store and allows modification of the devices connected to the system. Exploring directories and their usability: We know that Linux is a very complex system that requires an efficient way to start, stop, maintain and reboot a system, unlike Windows operating system. In the Linux system some well-defined configuration files, binaries, man pages information files available for every process.\nLinux Kernel File: /boot/vmlinux – The Linux kernel file. Device Files: /dev/hda – Device file for the first IDE HDD. /dev/hdc – A pseudo-device that output garbage output is redirected to /dev/null. System Configuration Files: /etc/bashrc – It is used by bash shell that contains system defaults and aliases. /etc/crontab – A shell script to run specified commands on a predefined time interval. /etc/exports – It contains information on the file system available on the network. /etc/fstab – Information of the Disk Drive and their mount point. /etc/group – It is a text file to define Information of Security Group. /etc/grub.conf – It is the grub bootloader configuration file. /etc/init.d – Service startup Script. /etc/lilo.conf – It contains lilo bootloader configuration file. /etc/hosts – Information of IP and corresponding hostnames. /etc/hosts.allow – It contains a list of hosts allowed accessing services on the local machine. /etc/host.deny – List of hosts denied to access services on the local machine. /etc/inittab – INIT process and their interaction at the various run level. /etc/issue – Allows editing the pre-login message. /etc/modules.conf – It contains the configuration files for the system modules. /etc/motd – It contains the message of the day. /etc/mtab – Currently mounted blocks information. /etc/passwd – It contains username, password of the system, users in a shadow file. /etc/printcap – It contains printer Information. /etc/profile – Bash shell defaults. /etc/profile.d – It contains other scripts like application scripts, executed after login. /etc/rc.d – It avoids script duplication. /etc/rc.d/init.d – Run Level Initialisation Script. /etc/resolv.conf – DNS being used by System. /etc/security – It contains the name of terminals where root login is possible. /etc/skel – Script that initiates new user home directory. /etc/termcap – An ASCII file that defines the behavior of different types of the terminal. /etc/X11 – Directory tree contains all the conf files for the X-window System. User Related Files: /usr/bin – It contains most of the executable files. /usr/bin/X11 – Symbolic link of /usr/bin. /usr/include – It contains standard include files used by C program. /usr/share – It contains architecture independent shareable text files. /usr/lib – It contains object files and libraries. /usr/sbin – It contains commands for Super User, for System Administration. Virtual and Pseudo Process Related Files: /proc/cpuinfo – CPU Information /proc/filesystems – It keeps the useful info about the processes that are running currently. /proc/interrupts – it keeps the information about the number of interrupts per IRQ. /proc/ioports – Contains all the Input and Output addresses used by devices on the server. /proc/meminfo – It reports the memory usage information. /proc/modules – Currently using kernel module. /proc/mount – Mounted File-system Information. /proc/stat – It displays the detailed statistics of the current system. /proc/swaps – It contains swap file information. Version Information File: /version – It displays the Linux version information. Log Files: /var/log/lastlog – It stores user last login info. /var/log/messages – It has all the global system messages. /var/log/wtmp – It keeps a history of login and logout information.\n","date":"Jan 1, 0001","img":"","permalink":"/series/linux/root_directory/","series":null,"tags":null,"title":""},{"categories":null,"content":"","date":"Jan 1, 0001","img":"","permalink":"/contact/","series":null,"tags":null,"title":"Contact Me"},{"categories":null,"content":"What is R90 一次完美的睡眠是5个周期，5*90分，就是7.5小时。在R90睡眠法中，评价睡眠的质量不是通过睡眠的时间，而是睡眠周期的数量。 R90的核心理念：通过稳定的生物规律，从而高效恢复精力\n固定起床时间 给自己设定一个起床时间，不能随意改动，而且不能放任自己的惰性\n倒推入睡时间 如果7.30起床的话那么计算出的最佳入眠时间就是0:00。 如果在最佳入睡时间没有机会睡觉那也没有关系，你可以在其他睡眠时间的节点入睡（往后推90分），但一晚上最少需要3个周期，就是4.5小时的睡眠\n睡眠前后 生物钟通过自然环境中蓝光多少来判断生物时间的，在蓝光少的夜晚，人体分泌的褪黑素会增加\n 睡眠前1小时（至少30分钟）内不要接触手机/电脑 卧室用暖色的灯具有助于入睡 起床后建议拉开窗帘，让太阳光进入到屋内 起床一个小时内，也建议出去锻炼身体，这会让人体的生物钟意识到白天已经到了，于是更快的进入精神的状态  补充休息 除了晚上睡眠，在13:00左右和19:00左右是白天比较适合小憩的时间点，但是睡眠不要超过30分钟，如果超过三十分钟，会进入深度睡眠的状态（除非睡够90分钟），不然会让人头晕脑胀\n睡眠质量    睡眠质量 一周睡眠时间 平均每天（时）     及格 28个 6   良好 32个 6.857   优秀 35个 7.5    注：30分种的补充休息也计作一个周期\n","date":"Jan 1, 0001","img":"/images/bg/bbg.jpg","permalink":"/series/life/sleep/","series":["Life"],"tags":["Life"],"title":"Sleep"}]